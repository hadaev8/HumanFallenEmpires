#
namespace = human_fallen_empires_plague

# start plague
country_event = {
	id = human_fallen_empires_plague.0
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		nor = {
			has_global_flag = human_fallen_empires_disable_plague
			has_global_flag = human_fallen_empires_plague_started
		}
		or = {
			mid_game_years_passed > 30
			and = {
				mid_game_years_passed > 20
				is_difficulty > 0
			}
			and = {
				mid_game_years_passed > 10
				is_difficulty > 1
			}
			and = {
				mid_game_years_passed > 0
				is_difficulty > 2
			}
			and = {
				mid_game_years_passed > -10
				is_difficulty > 3
			}
			and = {
				mid_game_years_passed > -20
				is_difficulty > 4
			}
		}
	}

	immediate = {
		random_list = {
			20 = {
				break = yes
			}
			10 = {
			}
		}
		set_global_flag = human_fallen_empires_plague_started
		if = {
			limit = {
				exists = event_target:human_fallen_empires_chain_plague_count
			}
			event_target:human_fallen_empires_chain_plague_count = {
				set_variable = {
					which = human_fallen_empires_plague_planet_num
					value = 0
				}
			}
		}
		else = {
			random_planet = {
				save_global_event_target_as = human_fallen_empires_chain_plague_count
			}
		}
		set_variable = {
			which = human_fallen_empires_plague_power
			value = 4
		}
		if = {
			limit = {
				is_difficulty > 0
			}
			change_variable = {
				which = human_fallen_empires_plague_power
				value = 1
			}
		}
		if = {
			limit = {
				is_difficulty > 1
			}
			change_variable = {
				which = human_fallen_empires_plague_power
				value = 1
			}
		}
		if = {
			limit = {
				is_difficulty > 2
			}
			change_variable = {
				which = human_fallen_empires_plague_power
				value = 1
			}
		}
		if = {
			limit = {
				is_difficulty > 3
			}
			change_variable = {
				which = human_fallen_empires_plague_power
				value = 1
			}
		}
		if = {
			limit = {
				is_difficulty > 4
			}
			change_variable = {
				which = human_fallen_empires_plague_power
				value = 1
			}
		}
		while = {
			count = human_fallen_empires_plague_power
			random_planet = {
				limit = {
					human_fallen_empires_trigger_plague_valid_planet = yes
				}
				planet_event = {
					id = human_fallen_empires_plague.1
					days = 16
					random = 365
				}
			}
		}
		set_variable = {
			which = human_fallen_empires_plague_power
			value = 0
		}
		create_species = {
		 	name = Zombies
		 	class = random_non_machine
		}
		create_country = {
			name = Zombies
			species = last_created_species
			type = human_fallen_empires_plague_zombie
			flag = {
				icon = {
					category = human_fallen_empires_emblem
					file = human_fallen_empires_emblem_zombie.dds
				}
				background = {
					category = backgrounds
					file = 00_solid.dds
				}
				colors = {
					black
					black
					null
					null
				}
			}
			effect = {
				save_global_event_target_as = human_fallen_empires_plague_zombie_country
				every_playable_country = {
					establish_communications = prev
					country_event = {
						id = human_fallen_empires_plague.50
						days = 1
						random = 15
					}
				}
			}
		}
	}
}

# start on planet 1
planet_event = {
	id = human_fallen_empires_plague.1
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		human_fallen_empires_trigger_plague_valid_planet = yes
	}

	immediate = {
		set_timed_planet_flag = {
			flag = human_fallen_empires_plague_planet
			days = 3655
		}
		every_owned_pop = {
			limit = {
				human_fallen_empires_trigger_plague_is_immune = no
			}
			set_timed_pop_flag = {
				flag = human_fallen_empires_plague_pop
				days = 3650
			}
		}
		owner = {
			if = {
				limit = {
					has_event_chain = human_fallen_empires_chain_plague_count
				}
				add_event_chain_counter = {
					event_chain = human_fallen_empires_chain_plague_count
					counter = human_fallen_empires_chain_plague_infested_planet
					amount = 1
				}
			}
		}
		every_playable_country = {
			limit = {
				has_event_chain = human_fallen_empires_chain_plague_count
			}
			add_event_chain_counter = {
				event_chain = human_fallen_empires_chain_plague_count
				counter = human_fallen_empires_chain_plague_infested_planet_total
				amount = 1
			}
		}
		log = "Plague start on planet [root.GetName] owner: [owner.GetName]"
		# set modifier and inform
		switch = {
			trigger = has_global_flag
			human_fallen_empires_plague_lvl_3 = {
				add_modifier = {
					modifier = human_fallen_empires_plague_lvl_3
					days = 3650
				}
			}
			human_fallen_empires_plague_lvl_2 = {
				add_modifier = {
					modifier = human_fallen_empires_plague_lvl_2
					days = 3650
				}
			}
			default = {
				add_modifier = {
					modifier = human_fallen_empires_plague_lvl_1
					days = 3650
				}
			}
		}
		# inform
		owner = {
			country_event = {
				id = human_fallen_empires_plague.53
				days = 1
				random = 15
			}
		}
		# lvl up plague
		event_target:human_fallen_empires_chain_plague_count = {
			change_variable = {
				which = human_fallen_empires_plague_planet_num
				value = 1
			}
		}
		if = {
			limit = {
				not = {
					has_global_flag = human_fallen_empires_plague_lvl_2
				}
				event_target:human_fallen_empires_chain_plague_count = {
					check_variable = {
						which = human_fallen_empires_plague_planet_num
						value > 30
					}
				}
			}
			set_global_flag = human_fallen_empires_plague_lvl_2
			owner = {
				country_event = {
					id = human_fallen_empires_plague.51
					days = 1
				}
			}
		}
		else_if = {
			limit = {
				not = {
					has_global_flag = human_fallen_empires_plague_lvl_3
				}
				event_target:human_fallen_empires_chain_plague_count = {
					check_variable = {
						which = human_fallen_empires_plague_planet_num
						value > 60
					}
				}
			}
			set_global_flag = human_fallen_empires_plague_lvl_3
			owner = {
				country_event = {
					id = human_fallen_empires_plague.52
					days = 1
				}
			}
		}
		# pulse events
		# kill pop
		planet_event = {
			id = human_fallen_empires_plague.2
			days = 180
			random = 180
		}
		# send plague
		planet_event = {
			id = human_fallen_empires_plague.6
			days = 180
			random = 180
		}
		set_timed_planet_flag = {
			flag = human_fallen_empires_plague_planet_owner@owner
			days = 3655
		}
		# check planet after 10 years
		planet_event = {
			id = human_fallen_empires_plague.4
			days = 3651
		}
	}
}

# kill pop pulse 2
planet_event = {
	id = human_fallen_empires_plague.2
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		not = {
			has_global_flag = human_fallen_empires_disable_plague
		}
		exists = owner
		has_planet_flag = human_fallen_empires_plague_planet
		any_owned_pop = {
			human_fallen_empires_trigger_plague_is_immune = no
		}
	}

	immediate = {
		planet_event = {
			id = human_fallen_empires_plague.2
			days = 180
			random = 180
		}
		# log = "Plague pulse on planet [Root.GetName] owner: [Root.Owner.GetName]"
		# kill someone
		if = {
			limit = {
				has_global_flag = human_fallen_empires_plague_lvl_2
			}
			random_list = {
				# die
				10 = {
					modifier = {
						factor = 0.75
						has_building = building_clinic
					}
					modifier = {
						factor = 0.5
						has_building = building_hospital
					}
					modifier = {
						factor = 0.5
						owner = {
							is_ai = yes
						}
					}
					modifier = {
						factor = 2
						is_difficulty > 3
					}
					modifier = {
						factor = 2
						is_difficulty > 2
					}
					modifier = {
						factor = 2
						is_difficulty > 1
					}
					modifier = {
						factor = 2
						is_difficulty > 0
					}
					modifier = {
						factor = 2
						num_pops > 20
					}
					modifier = {
						factor = 2
						num_pops > 10
					}
					random_owned_pop = {
						limit = {
							human_fallen_empires_trigger_plague_is_immune = no
						}
						random_list = {
							2 = {
								modifier = {
									factor = 0
									human_fallen_empires_trigger_plague_is_resist = no
								}
							}
							8 = {
								owner = {
									country_event = {
										id = human_fallen_empires_plague.56
										days = 1
									}
									if = {
										limit = {
											has_event_chain = human_fallen_empires_chain_plague_count
										}
										add_event_chain_counter = {
											event_chain = human_fallen_empires_chain_plague_count
											counter = human_fallen_empires_chain_plague_kill_pop_count
											amount = 1
										}
									}
								}
								every_playable_country = {
									limit = {
										has_event_chain = human_fallen_empires_chain_plague_count
									}
									add_event_chain_counter = {
										event_chain = human_fallen_empires_chain_plague_count
										counter = human_fallen_empires_chain_plague_kill_pop_count_total
										amount = 1
									}
								}
								root = {
									if = {
										limit = {
											has_global_flag = human_fallen_empires_plague_lvl_3
											count_planet_army = {
												count < 15
											}
										}
										create_army = {
											name = Zombies
											owner = event_target:human_fallen_empires_plague_zombie_country
											type = human_fallen_empires_plague_zombie_army
										}
										every_playable_country = {
											limit = {
												has_event_chain = human_fallen_empires_chain_plague_count
											}
											add_event_chain_counter = {
												event_chain = human_fallen_empires_chain_plague_count
												counter = human_fallen_empires_chain_plague_zombie_count_total
												amount = 1
											}
										}
									}
								}
								kill_pop = yes
							}
						}
					}
				}
				# or not to die
				30 = {
					random_list = {
						# get immune
						10 = {
							owner = {
								country_event = {
									id = human_fallen_empires_plague.58
									days = 1
								}
							}
							random_owned_pop = {
								limit = {
									human_fallen_empires_trigger_plague_is_immune = no
								}
								modify_species = {
									add_trait = human_fallen_empires_species_trait_immune
								}
							}
						}
						# nothing
						90 = {
						}
					}
				}
			}
		}
	}
}

# send plague pulse 6
planet_event = {
	id = human_fallen_empires_plague.6
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		not = {
			has_global_flag = human_fallen_empires_disable_plague
		}
		exists = owner
		has_planet_flag = human_fallen_empires_plague_planet
		any_owned_pop = {
			human_fallen_empires_trigger_plague_is_immune = no
		}
	}

	immediate = {
		planet_event = {
			id = human_fallen_empires_plague.6
			days = 720
			random = 180
		}
		# send plague
		closest_system = {
			max_steps = 15
			limit = {
				any_planet = {
					human_fallen_empires_trigger_plague_valid_planet = yes
				}
			}
			random_system_planet = {
				limit = {
					human_fallen_empires_trigger_plague_valid_planet = yes
				}
				random_list = {
					# nothing
					10 = {
						modifier = {
							factor = 1.1
							has_building = building_clinic
						}
						modifier = {
							factor = 1.2
							has_building = building_hospital
						}
						modifier = {
							factor = 1.4
							habitable_structure = yes
						}
						modifier = {
							factor = 2
							has_global_flag = human_fallen_empires_plague_lvl_2
						}
						modifier = {
							factor = 1.5
							owner = {
								human_fallen_empires_trigger_is_fallen = yes
							}
						}
						modifier = {
							factor = 1.2
							owner = {
								has_country_edict = human_fallen_empires_plague_quarantine
							}
						}
						modifier = {
							factor = 1.2
							owner = {
								not = {
									is_country = root.owner
								}
							}
						}
						modifier = {
							factor = 1.2
							owner = {
								not = {
									is_country = root.owner
								}
								has_closed_borders = root.owner
							}
						}
						modifier = {
							factor = 10
							owner = {
								not = {
									is_country = root.owner
								}
								is_homicidal = yes
							}
						}
						#log = "not send plague"
					}
					# send plague
					10 = {
						# scaled_modifier = {
							# limit = {
								# human_fallen_empires_trigger_plague_is_immune = no
							# }
							# scope = this
							# add = 0.8
							# # factor = 0.2 - test it
							# calc = pop_count
						# }
						modifier = {
							add = 1.6
							count_pops = {
								limit = {
									human_fallen_empires_trigger_plague_is_immune = no
								}
								count > 3
							}
						}
						modifier = {
							add = 1.6
							count_pops = {
								limit = {
									human_fallen_empires_trigger_plague_is_immune = no
								}
								count > 5
							}
						}
						modifier = {
							add = 1.6
							count_pops = {
								limit = {
									human_fallen_empires_trigger_plague_is_immune = no
								}
								count > 7
							}
						}
						modifier = {
							add = 1.6
							count_pops = {
								limit = {
									human_fallen_empires_trigger_plague_is_immune = no
								}
								count > 9
							}
						}
						modifier = {
							add = 1.6
							count_pops = {
								limit = {
									human_fallen_empires_trigger_plague_is_immune = no
								}
								count > 11
							}
						}
						modifier = {
							add = 1.6
							count_pops = {
								limit = {
									human_fallen_empires_trigger_plague_is_immune = no
								}
								count > 13
							}
						}
						modifier = {
							add = 1.6
							count_pops = {
								limit = {
									human_fallen_empires_trigger_plague_is_immune = no
								}
								count > 15
							}
						}
						modifier = {
							add = 1.6
							count_pops = {
								limit = {
									human_fallen_empires_trigger_plague_is_immune = no
								}
								count > 17
							}
						}
						modifier = {
							add = 1.6
							count_pops = {
								limit = {
									human_fallen_empires_trigger_plague_is_immune = no
								}
								count > 19
							}
						}
						modifier = {
							add = 1.6
							count_pops = {
								limit = {
									human_fallen_empires_trigger_plague_is_immune = no
								}
								count > 21
							}
						}
						modifier = {
							add = 1.6
							count_pops = {
								limit = {
									human_fallen_empires_trigger_plague_is_immune = no
								}
								count > 23
							}
						}
						planet_event = {
							id = human_fallen_empires_plague.1
							days = 180
							random = 180
						}
						#log = "send plague"
					}
				}
			}
		}
	}
}

# start by migration 3
pop_event = {
	id = human_fallen_empires_plague.3
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_pop_flag = human_fallen_empires_plague_pop
		exists = planet
		planet = {
			human_fallen_empires_trigger_plague_valid_planet = yes
		}
	}

	immediate = {
		planet = {
			planet_event = {
				id = human_fallen_empires_plague.1
			}
			log = "Plague migration on planet [this.GetName] owner: [owner.GetName]"
		}
	}
}

# reduce the counter after 10 years
planet_event = {
	id = human_fallen_empires_plague.4
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_planet_flag = human_fallen_empires_plague_planet
	}

	immediate = {
		every_playable_country = {
			limit = {
				has_event_chain = human_fallen_empires_chain_plague_count
			}
			add_event_chain_counter = {
				event_chain = human_fallen_empires_chain_plague_count
				counter = human_fallen_empires_chain_plague_infested_planet_total
				amount = -1
			}
		}
		if = {
			limit = {
				exists = owner
				owner = {
					not = {
						is_country_type = human_fallen_empires_plague_zombie
					}
				}
			}
			owner = {
				if = {
					limit = {
						has_event_chain = human_fallen_empires_chain_plague_count
					}
					add_event_chain_counter = {
						event_chain = human_fallen_empires_chain_plague_count
						counter = human_fallen_empires_chain_plague_infested_planet
						amount = -1
					}
				}
			}
		}
		else = {
			every_playable_country = {
				limit = {
					has_event_chain = human_fallen_empires_chain_plague_count
				}
				add_event_chain_counter = {
					event_chain = human_fallen_empires_chain_plague_count
					counter = human_fallen_empires_chain_plague_kill_planet_count_total
					amount = 1
				}
			}
			random_country = {
				limit = {
					root = {
						has_planet_flag = human_fallen_empires_plague_planet_owner@prev
					}
				}
				country_event = {
					id = human_fallen_empires_plague.61
				}
				if = {
					limit = {
						has_event_chain = human_fallen_empires_chain_plague_count
					}
					add_event_chain_counter = {
						event_chain = human_fallen_empires_chain_plague_count
						counter = human_fallen_empires_chain_plague_kill_planet_count
						amount = 1
					}
					add_event_chain_counter = {
						event_chain = human_fallen_empires_chain_plague_count
						counter = human_fallen_empires_chain_plague_infested_planet
						amount = -1
					}
				}
			}
		}
	}
}

# zombies take planet for on_planet_occupied
planet_event = {
	id = human_fallen_empires_plague.5
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		exists = owner
		exists = fromfrom
		fromfrom = {
			is_country_type = human_fallen_empires_plague_zombie
		}
	}

	immediate = {
		log = "Plague zombies take planet [this.GetName] owner: [owner.GetName]"
		owner = {
			country_event = {
				id = human_fallen_empires_plague.62
			}
		}
		# fromfrom = {
		# 	every_owned_fleet = {
		# 		destroy_fleet = this
		# 	}
		# }
		# every_planet_army = {
		# 	limit = {
		# 		not = {
		# 			army_type = human_fallen_empires_plague_zombie_army
		# 		}
		# 	}
		# 	remove_army = yes
		# }
		every_owned_pop = {
			kill_pop = yes
		}
		set_owner = fromfrom
	}
}

# retake zombie planet for on_planet_occupied
planet_event = {
	id = human_fallen_empires_plague.7
	title = human_fallen_empires_plague.7.name
	desc = human_fallen_empires_plague.7.desc
	picture = GFX_evt_ground_combat
	show_sound = event_ground_battle
	is_triggered_only = yes
	location = root

	trigger = {
		exists = from
		from = {
			is_country_type = human_fallen_empires_plague_zombie
		}
		exists = fromfrom
	}

	immediate = {
		every_planet_army = {
			limit = {
				army_type = human_fallen_empires_plague_zombie_army
			}
			remove_army = yes
		}
		set_owner = fromfrom
		log = "Take planet [this.GetName] from zombies new owner: [owner.GetName]"
	}

	option = {
		name = human_fallen_empires_plague.7.0
	}
}

# report event after lvl 2 for on_tech_increased
country_event = {
	id = human_fallen_empires_plague.9
	title = human_fallen_empires_plague.9.name
	desc = {
		trigger = {
			text = human_fallen_empires_plague.9.desc.0
			success_text = {
				text = human_fallen_empires_plague.9.desc.1
				any_owned_planet = {
					habitable_structure = yes
				}
			}
			text = human_fallen_empires_plague.9.desc.2
		}
	}
	show_sound = event_laboratory_sound
	is_triggered_only = yes
	diplomatic = yes

	trigger = {
		last_increased_tech = human_fallen_empires_tech_plague_study
		has_global_flag = human_fallen_empires_plague_started
	}

	immediate = {
		random_owned_leader = {
			limit = {
				leader_class = scientist
			}
			save_event_target_as = human_fallen_empires_plague_scientist_portrait
		}
	}

	picture_event_data = {
		portrait = event_target:human_fallen_empires_plague_scientist_portrait
		room = human_fallen_empires_lab_room
	}

	option = {
		name = DISCONCERTING
		exclusive_trigger = {
			human_fallen_empires_trigger_is_hive = yes
		}
	}
	option = {
		name = human_fallen_empires_plague.9.0
		custom_tooltip = human_fallen_empires_plague.9.0.tooltip
		hidden_effect = {
			country_event = {
				id = human_fallen_empires_plague.10
				days = 2
			}
		}
	}
}

# second diplo event
country_event = {
	id = human_fallen_empires_plague.10
	title = human_fallen_empires_plague.10.name
	desc = {
		trigger = {
			success_text = {
				text = human_fallen_empires_plague.10.desc.0.0.0
				is_xenophobe = yes
				has_authority = auth_democratic
			}
			success_text = {
				text = human_fallen_empires_plague.10.desc.0.0.1
				is_xenophobe = yes
				has_authority = auth_oligarchic
			}
			success_text = {
				text = human_fallen_empires_plague.10.desc.0.0.2
				is_xenophobe = yes
				has_authority = auth_dictatorial
			}
			success_text = {
				text = human_fallen_empires_plague.10.desc.0.0.3
				is_xenophobe = yes
				has_authority = auth_imperial
			}
			success_text = {
				text = human_fallen_empires_plague.10.desc.0.1.0
				is_xenophile = yes
				has_authority = auth_democratic
			}
			success_text = {
				text = human_fallen_empires_plague.10.desc.0.1.1
				is_xenophile = yes
				has_authority = auth_oligarchic
			}
			success_text = {
				text = human_fallen_empires_plague.10.desc.0.1.2
				is_xenophile = yes
				has_authority = auth_dictatorial
			}
			success_text = {
				text = human_fallen_empires_plague.10.desc.0.1.3
				is_xenophile = yes
				has_authority = auth_imperial
			}
			success_text = {
				text = human_fallen_empires_plague.10.desc.0.2.0
				has_militarist_government = yes
				is_xenophobe = no
				is_xenophile = no
				has_authority = auth_democratic
			}
			success_text = {
				text = human_fallen_empires_plague.10.desc.0.2.1
				has_militarist_government = yes
				is_xenophobe = no
				is_xenophile = no
				has_authority = auth_oligarchic
			}
			success_text = {
				text = human_fallen_empires_plague.10.desc.0.2.2
				has_militarist_government = yes
				is_xenophobe = no
				is_xenophile = no
				has_authority = auth_dictatorial
			}
			success_text = {
				text = human_fallen_empires_plague.10.desc.0.2.3
				has_militarist_government = yes
				is_xenophobe = no
				is_xenophile = no
				has_authority = auth_imperial
			}
			success_text = {
				text = human_fallen_empires_plague.10.desc.0.3.0
				has_pacifist_government = yes
				is_xenophobe = no
				is_xenophile = no
				has_authority = auth_democratic
			}
			success_text = {
				text = human_fallen_empires_plague.10.desc.0.3.1
				has_pacifist_government = yes
				is_xenophobe = no
				is_xenophile = no
				has_authority = auth_oligarchic
			}
			success_text = {
				text = human_fallen_empires_plague.10.desc.0.3.2
				has_pacifist_government = yes
				is_xenophobe = no
				is_xenophile = no
				has_authority = auth_dictatorial
			}
			success_text = {
				text = human_fallen_empires_plague.10.desc.0.3.3
				has_pacifist_government = yes
				is_xenophobe = no
				is_xenophile = no
				has_authority = auth_imperial
			}
			success_text = {
				text = human_fallen_empires_plague.10.desc.0.4.0
				has_spiritualist_government = yes
				is_xenophobe = no
				is_xenophile = no
				has_authority = auth_democratic
			}
			success_text = {
				text = human_fallen_empires_plague.10.desc.0.4.1
				has_spiritualist_government = yes
				is_xenophobe = no
				is_xenophile = no
				has_authority = auth_oligarchic
			}
			success_text = {
				text = human_fallen_empires_plague.10.desc.0.4.2
				has_spiritualist_government = yes
				is_xenophobe = no
				is_xenophile = no
				has_authority = auth_dictatorial
			}
			success_text = {
				text = human_fallen_empires_plague.10.desc.0.4.3
				has_spiritualist_government = yes
				is_xenophobe = no
				is_xenophile = no
				has_authority = auth_imperial
			}
			success_text = {
				text = human_fallen_empires_plague.10.desc.0.5.0
				has_materialist_government = yes
				is_xenophobe = no
				is_xenophile = no
				has_authority = auth_democratic
			}
			success_text = {
				text = human_fallen_empires_plague.10.desc.0.5.1
				has_materialist_government = yes
				is_xenophobe = no
				is_xenophile = no
				has_authority = auth_oligarchic
			}
			success_text = {
				text = human_fallen_empires_plague.10.desc.0.5.2
				has_materialist_government = yes
				is_xenophobe = no
				is_xenophile = no
				has_authority = auth_dictatorial
			}
			success_text = {
				text = human_fallen_empires_plague.10.desc.0.5.3
				has_materialist_government = yes
				is_xenophobe = no
				is_xenophile = no
				has_authority = auth_imperial
			}
			# other for now xenophiles
			success_text = {
				text = human_fallen_empires_plague.10.desc.0.1.0
				has_militarist_government = no
				has_pacifist_government = no
				has_spiritualist_government = no
				has_materialist_government = no
				is_xenophobe = no
				is_xenophile = no
			}
			success_text = {
				text = human_fallen_empires_plague.10.desc.1.0
				is_xenophobe = yes
			}
			success_text = {
				text = human_fallen_empires_plague.10.desc.1.1
				is_xenophile = yes
			}
			success_text = {
				text = human_fallen_empires_plague.10.desc.1.2
				has_militarist_government = yes
				is_xenophobe = no
				is_xenophile = no
			}
			success_text = {
				text = human_fallen_empires_plague.10.desc.1.3
				has_pacifist_government = yes
				is_xenophobe = no
				is_xenophile = no
			}
			success_text = {
				text = human_fallen_empires_plague.10.desc.1.4
				has_spiritualist_government = yes
				is_xenophobe = no
				is_xenophile = no
			}
			success_text = {
				text = human_fallen_empires_plague.10.desc.1.5
				has_materialist_government = yes
				is_xenophobe = no
				is_xenophile = no
			}
			# other for now xenophiles
			success_text = {
				text = human_fallen_empires_plague.10.desc.1.3
				has_militarist_government = no
				has_pacifist_government = no
				has_spiritualist_government = no
				has_materialist_government = no
				is_xenophobe = no
				is_xenophile = no
			}
			success_text = {
				text = human_fallen_empires_plague.10.desc.2.0
				has_policy_flag = refugees_allowed
			}
			success_text = {
				text = human_fallen_empires_plague.10.desc.3.0
				is_xenophobe = yes
			}
			success_text = {
				text = human_fallen_empires_plague.10.desc.3.1
				is_xenophile = yes
			}
			success_text = {
				text = human_fallen_empires_plague.10.desc.3.2
				has_militarist_government = yes
				is_xenophobe = no
				is_xenophile = no
			}
			success_text = {
				text = human_fallen_empires_plague.10.desc.3.3
				has_pacifist_government = yes
				is_xenophobe = no
				is_xenophile = no
			}
			success_text = {
				text = human_fallen_empires_plague.10.desc.3.4
				has_spiritualist_government = yes
				is_xenophobe = no
				is_xenophile = no
			}
			success_text = {
				text = human_fallen_empires_plague.10.desc.3.5
				has_materialist_government = yes
				is_xenophobe = no
				is_xenophile = no
			}
			# other for now xenophiles
			success_text = {
				text = human_fallen_empires_plague.10.desc.3.3
				has_militarist_government = no
				has_pacifist_government = no
				has_spiritualist_government = no
				has_materialist_government = no
				is_xenophobe = no
				is_xenophile = no
			}
			success_text = {
				text = human_fallen_empires_plague.10.desc.4.0
				has_authority = auth_democratic
				allows_purge = yes
			}
			success_text = {
				text = human_fallen_empires_plague.10.desc.4.1
				has_authority = auth_oligarchic
				allows_purge = yes
			}
			success_text = {
				text = human_fallen_empires_plague.10.desc.4.2
				has_authority = auth_dictatorial
				allows_purge = yes
			}
			success_text = {
				text = human_fallen_empires_plague.10.desc.4.3
				has_authority = auth_imperial
				allows_purge = yes
			}
		}
	}
	show_sound = event_celebration
	is_triggered_only = yes
	diplomatic = yes

	trigger = {
		human_fallen_empires_trigger_is_hive = no
	}

	immediate = {
		random_owned_leader = {
			limit = {
				leader_class = ruler
			}
			save_event_target_as = human_fallen_empires_plague_ruler_portrait
		}
	}

	picture_event_data = {
		portrait = event_target:human_fallen_empires_plague_ruler_portrait
		room = ethic_spaceship_room
		# planet_background = root
		# graphical_culture = root
		# city_level = root
		# room = root
	}

	option = {
		name = human_fallen_empires_plague.10.0
		add_modifier = {
			modifier = human_fallen_empires_unity
			days = 365
		}
	}
}

# inform events 50 - 100
# plague start inform
country_event = {
	id = human_fallen_empires_plague.50
	title = human_fallen_empires_plague.50.name
	desc = human_fallen_empires_plague.50.desc
	picture = GFX_evt_news_room
	show_sound = event_laboratory_sound
	is_triggered_only = yes

	immediate = {
		begin_event_chain = {
			event_chain = human_fallen_empires_chain_plague_count
			target = this
		}
	}

	option = {
		name = human_fallen_empires_plague.50.0
	}
	# robots
	option = {
		name = human_fallen_empires_plague.50.1.0
		exclusive_trigger = {
			human_fallen_empires_trigger_is_robot = yes
			or = {
				is_xenophobe = yes
				is_homicidal = yes
			}
		}
		human_fallen_empires_effect_xenophobe_attraction.0 = yes
	}
	option = {
		name = human_fallen_empires_plague.50.1.1
		exclusive_trigger = {
			human_fallen_empires_trigger_is_robot = yes
			or = {
				is_xenophile = yes
				has_valid_civic = civic_machine_servitor
			}
		}
		human_fallen_empires_effect_xenophile_attraction.0 = yes
	}
	option = {
		name = human_fallen_empires_plague.50.1.2
		exclusive_trigger = {
			human_fallen_empires_trigger_is_robot = yes
		}
	}
	# brainworm
	option = {
		name = human_fallen_empires_plague.50.2
		exclusive_trigger = {
			human_fallen_empires_trigger_brainworm_country = yes
		}
		human_fallen_empires_effect_add_unity.1 = yes
	}
	# discovery
	option = {
		name = human_fallen_empires_plague.50.3
		exclusive_trigger = {
			is_country_type = human_fallen_empires_discovery
		}
	}
}

# plague lvl 2 inform
country_event = {
	id = human_fallen_empires_plague.51
	title = human_fallen_empires_plague.51.name
	desc = {
		trigger = {
			text = human_fallen_empires_plague.51.desc.0.0
			success_text = {
				text = human_fallen_empires_plague.51.desc.1.0
				has_country_flag = human_fallen_empires_plague_meet
			}
			fail_text = {
				text = human_fallen_empires_plague.51.desc.1.1
				has_country_flag = human_fallen_empires_plague_meet
			}
		}
	}
	picture = GFX_evt_news_room
	show_sound = event_laboratory_sound
	is_triggered_only = yes

	immediate = {
		remove_country_flag = human_fallen_empires_plague_meet
	}

	option = {
		name = CURSES
		if = {
			limit = {
				has_country_flag = human_fallen_empires_plague_meet
			}
			add_research_option = human_fallen_empires_tech_plague_study
		}
	}
	option = {
		name = human_fallen_empires_plague.51.0
		exclusive_trigger = {
			is_spiritualist = yes
		}
		if = {
			limit = {
				has_country_flag = human_fallen_empires_plague_meet
			}
			add_research_option = human_fallen_empires_tech_plague_study
		}
	}
	option = {
		name = human_fallen_empires_plague.51.1
		exclusive_trigger = {
			is_materialist = yes
		}
		if = {
			limit = {
				has_country_flag = human_fallen_empires_plague_meet
			}
			add_research_option = human_fallen_empires_tech_plague_study
		}
	}
}

# plague lvl 3 inform
country_event = {
	id = human_fallen_empires_plague.52
	title = human_fallen_empires_plague.52.name
	desc = human_fallen_empires_plague.52.desc
	picture = GFX_evt_news_room
	show_sound = event_laboratory_sound
	is_triggered_only = yes

	trigger = {
		is_ai = no
	}

	immediate = {
		remove_country_flag = human_fallen_empires_plague_meet
	}

	option = {
		name = DISCONCERTING
	}
}

# plague on our planet + empire infected notification (first planet get plague, check for ever meet plague)
country_event = {
	id = human_fallen_empires_plague.53
	title = human_fallen_empires_plague.53.name
	desc = {
		trigger = {
			# regular texts
			success_text = {
				text = human_fallen_empires_plague.53.desc.0.0
				not = {
					has_global_flag = human_fallen_empires_plague_lvl_2
				}
				has_country_flag = human_fallen_empires_plague_meet
			}
			success_text = {
				text = human_fallen_empires_plague.53.desc.0.1
				not = {
					has_global_flag = human_fallen_empires_plague_lvl_3
				}
				has_country_flag = human_fallen_empires_plague_meet
			}
			success_text = {
				text = human_fallen_empires_plague.53.desc.0.2
				has_global_flag = human_fallen_empires_plague_lvl_3
				has_country_flag = human_fallen_empires_plague_meet
			}
			# meet plague texts
			fail_text = {
				text = human_fallen_empires_plague.53.desc.1.0
				has_global_flag = human_fallen_empires_plague_lvl_2
				has_country_flag = human_fallen_empires_plague_meet
			}
			fail_text = {
				text = human_fallen_empires_plague.53.desc.1.1
				has_global_flag = human_fallen_empires_plague_lvl_3
				has_country_flag = human_fallen_empires_plague_meet
			}
			success_text = {
				text = human_fallen_empires_plague.53.desc.1.2
				has_global_flag = human_fallen_empires_plague_lvl_3
				not = {
					has_country_flag = human_fallen_empires_plague_meet
				}
			}
			# show name of plague source
			success_text = {
				text = human_fallen_empires_plague.53.desc.2.0
				has_technology = human_fallen_empires_tech_plague_study
				exists = fromfrom
			}
		}
	}
	picture = {
		trigger = {
			has_global_flag = human_fallen_empires_plague_lvl_3
			not = {
				has_country_flag = human_fallen_empires_plague_meet
			}
		}
		picture = GFX_evt_human_fallen_empires_zombie
	}
	picture = {
		trigger = {
			has_global_flag = human_fallen_empires_plague_lvl_2
			not = {
				has_country_flag = human_fallen_empires_plague_meet
			}
		}
		picture = GFX_evt_human_fallen_empires_plague
	}
	picture = {
		picture = GFX_evt_news_room
	}
	show_sound = event_air_raid_siren
	is_triggered_only = yes
	location = from

	trigger = {
		#is_ai = no
		nand = {
			has_country_flag = human_fallen_empires_plague_block_planet
			has_country_flag = human_fallen_empires_plague_meet
		}
	}

	after = {
		set_country_flag = human_fallen_empires_plague_meet
		# if = {
		# 	limit = {
		# 		not = {
		# 			has_country_flag = human_fallen_empires_plague_meet
		# 		}
		# 	}
		# 	set_country_flag = human_fallen_empires_plague_meet
		# }
	}

	option = {
		name = human_fallen_empires_plague.53.0
		if = {
			limit = {
				has_global_flag = human_fallen_empires_plague_lvl_2
				nor = {
					has_tech_option = human_fallen_empires_tech_plague_study
					has_technology = human_fallen_empires_tech_plague_study
				}
			}
			add_research_option = human_fallen_empires_tech_plague_study
		}
	}
	option = {
		name = human_fallen_empires_block
		custom_tooltip = human_fallen_empires_plague_block.tooltip
		trigger = {
			has_country_flag = human_fallen_empires_plague_meet
		}
		hidden_effect = {
			set_country_flag = human_fallen_empires_plague_block_planet
		}
	}
}

# plague on our planet pulse
country_event = {
	id = human_fallen_empires_plague.56
	title = human_fallen_empires_plague.56.name
	desc = {
		trigger = {
			fail_text = {
				text = human_fallen_empires_plague.56.desc.0
				has_global_flag = human_fallen_empires_plague_lvl_3
			}
			success_text = {
				text = human_fallen_empires_plague.56.desc.1
				has_global_flag = human_fallen_empires_plague_lvl_3
			}
		}
	}
	picture = GFX_evt_human_fallen_empires_plague
	show_sound = event_air_raid_siren
	is_triggered_only = yes
	location = from

	trigger = {
		is_ai = no
		not = {
			has_country_flag = human_fallen_empires_plague_block_pulse
		}
	}

	option = {
		name = human_fallen_empires_plague.56.0
		trigger = {
			not = {
				has_global_flag = human_fallen_empires_plague_lvl_3
			}
		}
	}
	option = {
		name = human_fallen_empires_plague.56.1
		trigger = {
			has_global_flag = human_fallen_empires_plague_lvl_3
		}
	}
	option = {
		name = human_fallen_empires_block
		custom_tooltip = human_fallen_empires_plague_block.tooltip
		hidden_effect = {
			set_country_flag = human_fallen_empires_plague_block_pulse
		}
	}
}

# pop gain immune
country_event = {
	id = human_fallen_empires_plague.58
	title = human_fallen_empires_plague.58.name
	desc = human_fallen_empires_plague.58.desc
	picture = GFX_evt_human_fallen_empires_lab
	show_sound = event_celebration
	is_triggered_only = yes
	location = from

	trigger = {
		not = {
			has_technology = human_fallen_empires_tech_plague_immune
		}
	}

	option = {
		name = human_fallen_empires_plague.58.0
		trigger = {
			not = {
				has_country_flag = human_fallen_empires_plague_know_immune
			}
		}
		add_research_option = human_fallen_empires_tech_plague_immune
		set_country_flag = human_fallen_empires_plague_know_immune
		log = "[Root.GetName] now know immune"
	}
	option = {
		name = human_fallen_empires_plague.58.1
		trigger = {
			has_country_flag = human_fallen_empires_plague_know_immune
		}
		add_tech_progress = {
			tech = human_fallen_empires_tech_plague_immune
			progress = 0.01
		}
	}
}

# everyone die on planet notification for owner
country_event = {
	id = human_fallen_empires_plague.61
	title = human_fallen_empires_plague.61.name
	desc = human_fallen_empires_plague.61.desc
	picture = {
		trigger = {
			has_country_flag = human_fallen_empires_random_0
		}
		picture = GFX_evt_human_fallen_empires_ruins
	}
	picture = {
		trigger = {
			has_country_flag = human_fallen_empires_random_1
		}
		picture = GFX_evt_city_ruins
	}
	show_sound = event_ghost_town
	is_triggered_only = yes
	location = from

	trigger = {
		is_ai = no
		exists = from
		from = {
			not = {
				has_planet_flag = human_fallen_empires_plague_bombardment_planet
			}
		}
		not = {
			has_country_flag = human_fallen_empires_plague_block_all_die
		}
	}

	immediate = {
		human_fallen_empires_effect_random_roll_flags_2_country = yes
	}

	option = {
		name = human_fallen_empires_plague.61.0
	}

	option = {
		name = human_fallen_empires_block
		custom_tooltip = human_fallen_empires_plague_block.tooltip
		hidden_effect = {
			set_country_flag = human_fallen_empires_plague_block_all_die
		}
	}
}

# everyone die on planet notification for owner
country_event = {
	id = human_fallen_empires_plague.62
	title = human_fallen_empires_plague.62.name
	desc = human_fallen_empires_plague.62.desc
	picture = GFX_evt_human_fallen_empires_zombie
	is_triggered_only = yes
	location = from

	trigger = {
		is_ai = no
		not = {
			has_country_flag = human_fallen_empires_plague_block_zombie
		}
	}

	option = {
		name = human_fallen_empires_plague.62.0
	}
	option = {
		name = human_fallen_empires_block
		custom_tooltip = human_fallen_empires_plague_block.tooltip
		hidden_effect = {
			set_country_flag = human_fallen_empires_plague_block_zombie
		}
	}
}

# events on first plague planet 100 - 150
# planet_event = {
	# id = human_fallen_empires_plague.100
	# title = human_fallen_empires_plague.100.name
	# desc = human_fallen_empires_plague.100.desc
	# picture = GFX_evt_human_fallen_empires_plague
	# show_sound = event_air_raid_siren
	# is_triggered_only = yes
	# location = root

	# trigger = {
		# exists = owner
		# owner = {
			# not = {
				# has_country_flag = human_fallen_empires_plague_fist_time
			# }
		# }
	# }

	# immediate = {
		# set_timed_planet_flag = {
			# flag = human_fallen_empires_plague_fist_planet days = 3650
		# }
		# owner = {
			# set_country_flag = human_fallen_empires_plague_fist_time
		# }
	# }

	# option = {
		# name = human_fallen_empires_plague.100.0
	# }
# }

# bombardment event 150 - 200
# bombarding infected planet after project finished
ship_event = {
	id = human_fallen_empires_plague.150
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		event_target:human_fallen_empires_project_plague_planet_bombardment_target = {
			log = "Bombard plague planet [this.GetName] owner [owner.GetName]"
			set_timed_planet_flag = {
				flag = human_fallen_empires_plague_bombardment_planet
				days = 3650
			}
			if = {
				limit = {
					num_pops > 0
				}
				random_owned_pop = {
					save_event_target_as = human_fallen_empires_plague_purged_species
				}
				owner = {
					every_relation = {
						limit = {
							not = {
								is_same_species = event_target:human_fallen_empires_plague_purged_species
							}
							allows_purge = no
							or = {
								is_country_type = default
								has_ai_personality = awakened_fallen_empire_xenophile
							}
						}
						add_opinion_modifier = {
							who = root.owner
							modifier = opinion_genocidal
						}
					}
					every_relation = {
						limit = {
							is_same_species = event_target:human_fallen_empires_plague_purged_species
							allows_purge = no
						}
						add_opinion_modifier = {
							who = root.owner
							modifier = opinion_genocidal_our_species
						}
					}
				}
			}
			human_fallen_empires_effect_plague_planet_clean = yes
			destroy_colony = yes
			add_modifier = {
				modifier = human_fallen_empires_plague_bombardment_planet
				days = 36500
			}
		}
		# добавить эвенты адмирала
		owner = {
			country_event = {
				id = human_fallen_empires_plague.152
			}
		}
	}
}

# check if planet still has owner 151
ship_event = {
	id = human_fallen_empires_plague.151
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		event_target:human_fallen_empires_project_plague_planet_bombardment_target = {
			not = {
				 exists = owner
			}
		}
	}

	immediate = {
		owner = {
			abort_special_project = {
				type = human_fallen_empires_project_plague_planet_bombardment
				location = event_target:human_fallen_empires_project_plague_planet_bombardment_target
			}
		}
	}
}

# inform event
country_event = {
	id = human_fallen_empires_plague.152
	title = human_fallen_empires_plague.152.name
	desc = human_fallen_empires_plague.152.desc
	picture = GFX_evt_ground_combat
	show_sound = event_administrative_work
	is_triggered_only = yes

	trigger = {
		not = {
			has_country_flag = human_fallen_empires_plague.153_block
		}
	}

	option = {
		name = human_fallen_empires_plague.152.0
	}
	option = {
		name = human_fallen_empires_block
		custom_tooltip = human_fallen_empires_block.tooltip
		hidden_effect = {
			set_country_flag = human_fallen_empires_plague.153_block
		}
	}
}

# on_terraforming_complete
# may be increse tarraforming cost
planet_event = {
	id = human_fallen_empires_plague.153
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_modifier = human_fallen_empires_plague_bombardment_planet
	}

	immediate = {
		remove_modifier = human_fallen_empires_plague_bombardment_planet
	}
}

# get total war cb vs robots 160
country_event = {
	id = human_fallen_empires_plague.160
	title = human_fallen_empires_plague.160.name
	desc = human_fallen_empires_plague.160.desc
	picture = GFX_evt_ground_combat
	show_sound = event_administrative_work
	is_triggered_only = yes

	trigger = {
		has_global_flag = human_fallen_empires_plague_lvl_2
		not = {
			has_authority = auth_machine_intelligence
		}
		is_at_war = no
		any_relation = {
			has_authority = auth_machine_intelligence
			# relative_power = {
				# who = root
				# category = fleet
				# value >= equivalent
			# }
			root = {
				not = {
					has_casus_belli = {
						target = prev
						type = human_fallen_empires_cb_annex
					}
				}
			}
		}
		any_owned_planet = {
			has_planet_flag = human_fallen_empires_plague_planet
		}
	}

	immediate = {
		random_relation = {
			limit = {
				has_authority = auth_machine_intelligence
				# relative_power = {
					# who = root
					# category = fleet
					# value >= equivalent
				# }
				root = {
					not = {
						has_casus_belli = {
							target = prev
							type = human_fallen_empires_cb_annex
						}
					}
				}
			}
			save_event_target_as = human_fallen_empires_plague_160_machine
		}
	}

	option = {
		name = human_fallen_empires_plague.160.0
		add_casus_belli = {
			type = human_fallen_empires_cb_annex
			who = event_target:human_fallen_empires_plague_160_machine
			days = 365
		}
	}
	option = {
		name = human_fallen_empires_plague.160.1
	}
}

# plague bombardment by on_planet_zero_health
# Planet has reached 0 health from orbital bombardment
# This = Planet
# From = Bombarder
planet_event = {
	id = human_fallen_empires_plague.161
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		num_pops > 0
		exists = owner
		exists = from
		has_orbital_bombardment_stance = human_fallen_empires_stance_plague_spread
	}

	immediate = {
		log = "plague bombarding on [Root.GetStarName]"
		random_list = {
			8 = {
			}
			2 = {
				planet_event = {
					id = human_fallen_empires_plague.1
				}
			}
		}
	}
}