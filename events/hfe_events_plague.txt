#
namespace = hfe_plague
# start plague
country_event = {
	id = hfe_plague.0
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		nor = {
			has_global_flag = hfe_disable_plague
			has_global_flag = hfe_plague_started
		}
		or = {
			mid_game_years_passed > 40
			and = {
				mid_game_years_passed > 30
				is_difficulty > 0
			}
			and = {
				mid_game_years_passed > 20
				is_difficulty > 1
			}
			and = {
				mid_game_years_passed > 10
				is_difficulty > 2
			}
			and = {
				mid_game_years_passed > 0
				is_difficulty > 3
			}
			and = {
				mid_game_years_passed > -10
				is_difficulty > 4
			}
		}
	}
	immediate = {
		set_global_flag = hfe_plague_started
		create_species = {
			name = Zombies
			class = random
			blocked_archetypes = {
				MACHINE
				ROBOT
				LITHOID
			}
		}
		create_country = {
			name = Zombies
			species = last_created_species
			type = hfe_plague_zombie
			flag = {
				icon = {
					category = hfe_emblem
					file = hfe_emblem_zombie.dds
				}
				background = {
					category = backgrounds
					file = 00_solid.dds
				}
				colors = {
					"black"
					"black"
					"dark_green"
					"light_green"
				}
			}
			effect = {
				save_global_event_target_as = hfe_plague_zombie_country
				every_playable_country = {
					# establish_communications = prev
					begin_event_chain = {
						event_chain = hfe_chain_plague_count
						target = this
					}
					country_event = {
						id = hfe_plague.50
					}
				}
			}
		}
		event_target:global_event_country = {
			set_variable = {
				which = hfe_plague_planet_num
				value = 0
			}
		}
		set_variable = {
			which = hfe_plague_power
			value = 4
		}
		if = {
			limit = {
				is_difficulty > 0
			}
			change_variable = {
				which = hfe_plague_power
				value = 1
			}
		}
		if = {
			limit = {
				is_difficulty > 1
			}
			change_variable = {
				which = hfe_plague_power
				value = 1
			}
		}
		if = {
			limit = {
				is_difficulty > 2
			}
			change_variable = {
				which = hfe_plague_power
				value = 1
			}
		}
		if = {
			limit = {
				is_difficulty > 3
			}
			change_variable = {
				which = hfe_plague_power
				value = 1
			}
		}
		if = {
			limit = {
				is_difficulty > 4
			}
			change_variable = {
				which = hfe_plague_power
				value = 1
			}
		}
		while = {
			count = hfe_plague_power
			random_galaxy_planet = {
				limit = {
					hfe_trigger_plague_valid_planet = yes
				}
				planet_event = {
					id = hfe_plague.1
					days = 1
					random = 365
				}
			}
		}
		clear_variable = hfe_plague_power
	}
}

# start on planet 1
planet_event = {
	id = hfe_plague.1
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		hfe_trigger_plague_valid_planet = yes
	}
	immediate = {
		if = {
			limit = {
				has_global_flag = hfe_plague_logs
			}
			log = "Plague. Start on planet [root.GetName] owner: [owner.GetName]"
		}
		set_timed_planet_flag = {
			flag = hfe_plague_planet
			years = 10
		}
		# every_owned_pop = {
		# 	limit = {
		# 		hfe_trigger_plague_is_immune = no
		# 	}
		# 	set_timed_pop_flag = {
		# 		flag = hfe_plague_pop
		# 		days = 3650
		# 	}
		# }
		owner = {
			if = {
				limit = {
					has_event_chain = hfe_chain_plague_count
				}
				add_event_chain_counter = {
					event_chain = hfe_chain_plague_count
					counter = hfe_chain_plague_infested_planet
					amount = 1
				}
			}
		}
		every_playable_country = {
			limit = {
				has_event_chain = hfe_chain_plague_count
			}
			add_event_chain_counter = {
				event_chain = hfe_chain_plague_count
				counter = hfe_chain_plague_infested_planet_total
				amount = 1
			}
		}
		# set modifier
		switch = {
			trigger = has_global_flag
			hfe_plague_lvl_3 = {
				add_modifier = {
					modifier = hfe_plague_lvl_3
					years = 10
				}
			}
			hfe_plague_lvl_2 = {
				add_modifier = {
					modifier = hfe_plague_lvl_2
					years = 10
				}
			}
			default = {
				add_modifier = {
					modifier = hfe_plague_lvl_1
					years = 10
				}
			}
		}
		# inform
		owner = {
			country_event = {
				id = hfe_plague.53
				days = 1
				random = 15
			}
		}
		# lvl up plague
		event_target:global_event_country = {
			change_variable = {
				which = hfe_plague_planet_num
				value = 1
			}
		}
		if = {
			limit = {
				not = {
					has_global_flag = hfe_plague_lvl_2
				}
				event_target:global_event_country = {
					check_variable = {
						which = hfe_plague_planet_num
						value > 45
					}
				}
			}
			set_global_flag = hfe_plague_lvl_2
			owner = {
				country_event = {
					id = hfe_plague.51
					days = 1
				}
			}
		}
		else_if = {
			limit = {
				not = {
					has_global_flag = hfe_plague_lvl_3
				}
				event_target:global_event_country = {
					check_variable = {
						which = hfe_plague_planet_num
						value > 90
					}
				}
			}
			set_global_flag = hfe_plague_lvl_3
			owner = {
				country_event = {
					id = hfe_plague.52
					days = 1
				}
			}
		}
		# pulse events
		# kill pop
		planet_event = {
			id = hfe_plague.2
			days = 90
			random = 180
		}
		# send plague
		planet_event = {
			id = hfe_plague.3
			days = 180
			random = 180
		}
		# check planet after 10 years
		planet_event = {
			id = hfe_plague.4
			days = 3651
		}
	}
}

# kill pop pulse 2
planet_event = {
	id = hfe_plague.2
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		hfe_trigger_plague_planet_pulse = yes
	}
	immediate = {
		# not at same day
		if = {
			limit = {
				has_global_flag = hfe_plague.2_same_day
			}
			planet_event = {
				id = hfe_plague.2
				days = 1
			}
		}
		else = {
			if = {
				limit = {
					has_global_flag = hfe_plague_logs
				}
				log = "Plague. Pulse on planet [Root.GetName] owner: [Root.Owner.GetName]"
			}
			set_timed_global_flag = {
				flag = hfe_plague.2_same_day
				days = 1
			}
			planet_event = {
				id = hfe_plague.2
				days = 90
				random = 180
			}
			# kill someone
			if = {
				limit = {
					has_global_flag = hfe_plague_lvl_2
				}
				random_list = {
					# not die
					10 = {
						# crime
						modifier = {
							factor = 1.25
							planet_crime < 10
						}
						# amenities
						modifier = {
							factor = 1.25
							free_amenities > 0
						}
						modifier = {
							factor = 1.25
							free_amenities > 10
						}
						modifier = {
							factor = 1.25
							free_amenities > 20
						}
						# buildings
						modifier = {
							factor = 2
							has_building = building_clinic
						}
						modifier = {
							factor = 4
							has_building = building_hospital
						}
						modifier = {
							factor = 2
							has_building = building_psi_corps
						}
						# good planet type
						modifier = {
							factor = 2
							or = {
								is_planet_class = pc_gaia
								habitable_structure = yes
							}
						}
						# edict
						modifier = {
							factor = 2
							owner = {
								has_edict = hfe_plague_quarantine
							}
						}
						# ai bonus
						modifier = {
							factor = 2
							owner = {
								is_ai = yes
							}
						}
						# tech
						modifier = {
							factor = 2
							owner = {
								has_technology = hfe_tech_plague_immune
							}
						}
						modifier = {
							factor = 2
							owner = {
								has_technology = hfe_tech_plague_immune_2
							}
						}
						if = {
							limit = {
								has_global_flag = hfe_plague_logs
							}
							log = "Plague. Pop not die"
						}
						random_list = {
							90 = {
								modifier = {
									factor = 0
									owner = {
										has_technology = hfe_tech_plague_immune_2
									}
								}
								modifier = {
									factor = 0.1
									owner = {
										has_technology = hfe_tech_plague_immune
									}
								}
							}
							# get immune
							10 = {
								owner = {
									country_event = {
										id = hfe_plague.58
										days = 1
									}
								}
								random_owned_pop = {
									limit = {
										hfe_trigger_plague_is_immune = no
									}
									set_pop_flag = hfe_plague_pop_immune
								}
							}
						}
					}
					# die
					30 = {
						# amenities
						modifier = {
							factor = 1.25
							free_amenities < 0
						}
						modifier = {
							factor = 1.25
							free_amenities < -10
						}
						modifier = {
							factor = 1.25
							free_amenities < -20
						}
						# crime
						modifier = {
							factor = 1.25
							planet_crime > 10
						}
						modifier = {
							factor = 1.25
							planet_crime > 20
						}
						modifier = {
							factor = 1.25
							planet_crime > 30
						}
						modifier = {
							factor = 1.25
							planet_crime > 40
						}
						modifier = {
							factor = 1.25
							planet_crime > 50
						}
						modifier = {
							factor = 1.25
							planet_crime > 60
						}
						modifier = {
							factor = 1.25
							planet_crime > 70
						}
						modifier = {
							factor = 1.25
							planet_crime > 80
						}
						modifier = {
							factor = 1.25
							planet_crime > 90
						}
						# pop ammount scale
						modifier = {
							factor = 2
							count_owned_pop = {
								limit = {
									hfe_trigger_plague_is_immune = no
								}
								count > 100
							}
						}
						modifier = {
							factor = 2
							count_owned_pop = {
								limit = {
									hfe_trigger_plague_is_immune = no
								}
								count > 90
							}
						}
						modifier = {
							factor = 2
							count_owned_pop = {
								limit = {
									hfe_trigger_plague_is_immune = no
								}
								count > 80
							}
						}
						modifier = {
							factor = 2
							count_owned_pop = {
								limit = {
									hfe_trigger_plague_is_immune = no
								}
								count > 70
							}
						}
						modifier = {
							factor = 2
							count_owned_pop = {
								limit = {
									hfe_trigger_plague_is_immune = no
								}
								count > 60
							}
						}
						modifier = {
							factor = 2
							count_owned_pop = {
								limit = {
									hfe_trigger_plague_is_immune = no
								}
								count > 50
							}
						}
						modifier = {
							factor = 2
							count_owned_pop = {
								limit = {
									hfe_trigger_plague_is_immune = no
								}
								count > 40
							}
						}
						modifier = {
							factor = 2
							count_owned_pop = {
								limit = {
									hfe_trigger_plague_is_immune = no
								}
								count > 30
							}
						}
						modifier = {
							factor = 2
							count_owned_pop = {
								limit = {
									hfe_trigger_plague_is_immune = no
								}
								count > 20
							}
						}
						modifier = {
							factor = 2
							count_owned_pop = {
								limit = {
									hfe_trigger_plague_is_immune = no
								}
								count > 10
							}
						}
						random_owned_pop = {
							limit = {
								hfe_trigger_plague_is_immune = no
							}
							weights = {
								base = 10
								modifier = {
									factor = 0.5
									has_citizenship_rights = yes
								}
								modifier = {
									factor = 0.5
									hfe_trigger_plague_is_resist = yes
								}
								modifier = {
									factor = 2
									is_enslaved = yes
								}
							}
							random_list = {
								2 = {
									modifier = {
										factor = 0
										hfe_trigger_plague_is_resist = no
									}
								}
								8 = {
									owner = {
										country_event = {
											id = hfe_plague.56
											days = 1
										}
										if = {
											limit = {
												has_event_chain = hfe_chain_plague_count
											}
											add_event_chain_counter = {
												event_chain = hfe_chain_plague_count
												counter = hfe_chain_plague_kill_pop_count
												amount = 1
											}
										}
									}
									every_playable_country = {
										limit = {
											has_event_chain = hfe_chain_plague_count
										}
										add_event_chain_counter = {
											event_chain = hfe_chain_plague_count
											counter = hfe_chain_plague_kill_pop_count_total
											amount = 1
										}
									}
									root = {
										if = {
											limit = {
												has_global_flag = hfe_plague_lvl_3
												count_planet_army = {
													count < 15
												}
											}
											random_list = {
												10 = {
													modifier = {
														factor = 2
														owner = {
															is_ai = yes
														}
													}
													modifier = {
														factor = 4
														owner = {
															has_technology = hfe_tech_plague_anti_zombie
														}
													}
												}
												10 = {
													create_army = {
														name = Zombies
														owner = event_target:hfe_plague_zombie_country
														species = event_target:hfe_plague_zombie_country
														type = hfe_plague_zombie_army
													}
													every_playable_country = {
														limit = {
															has_event_chain = hfe_chain_plague_count
														}
														add_event_chain_counter = {
															event_chain = hfe_chain_plague_count
															counter = hfe_chain_plague_zombie_count_total
															amount = 1
														}
													}
												}
											}
										}
									}
									if = {
										limit = {
											has_global_flag = hfe_plague_logs
										}
										log = "Plague. Pop die"
									}
									kill_pop = yes
								}
							}
						}
					}
				}
			}
		}
	}
}

# send plague pulse 3
planet_event = {
	id = hfe_plague.3
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		hfe_trigger_plague_planet_pulse = yes
	}
	immediate = {
		# not at same day
		if = {
			limit = {
				has_global_flag = hfe_plague.3_same_day
			}
			planet_event = {
				id = hfe_plague.3
				days = 1
			}
		}
		else = {
			set_timed_global_flag = {
				flag = hfe_plague.3_same_day
				days = 1
			}
			planet_event = {
				id = hfe_plague.3
				days = 540
				random = 360
			}
			# send plague
			closest_system = {
				max_steps = 10
				limit = {
					exists = owner
					any_system_planet = {
						hfe_trigger_plague_valid_planet = yes
					}
				}
				random_system_planet = {
					limit = {
						hfe_trigger_plague_valid_planet = yes
					}
					random_list = {
						# not send plague
						10 = {
							# crime
							modifier = {
								factor = 1.25
								planet_crime < 10
							}
							# amenities
							modifier = {
								factor = 1.25
								free_amenities > 0
							}
							modifier = {
								factor = 1.25
								free_amenities > 10
							}
							modifier = {
								factor = 1.25
								free_amenities > 20
							}
							# buildings
							modifier = {
								factor = 2
								has_building = building_clinic
							}
							modifier = {
								factor = 4
								has_building = building_hospital
							}
							modifier = {
								factor = 2
								has_building = building_psi_corps
							}
							# good planet type
							modifier = {
								factor = 2
								or = {
									is_planet_class = pc_gaia
									habitable_structure = yes
								}
							}
							# edict
							modifier = {
								factor = 2
								owner = {
									has_edict = hfe_plague_quarantine
								}
							}
							# ai bonus
							modifier = {
								factor = 2
								owner = {
									is_ai = yes
								}
							}
							# tech
							modifier = {
								factor = 2
								owner = {
									has_technology = hfe_tech_plague_immune
								}
							}
							modifier = {
								factor = 2
								owner = {
									has_technology = hfe_tech_plague_immune_2
								}
							}
							# lvl 3 have worse spread
							modifier = {
								factor = 2
								has_global_flag = hfe_plague_lvl_3
							}
							# fallens have extra resist
							modifier = {
								factor = 2
								owner = {
									hfe_trigger_is_fallen = yes
								}
							}
							# cross boarding also gives resist
							modifier = {
								factor = 2
								owner = {
									not = {
										is_country = root.owner
									}
								}
							}
							# purifers have boost
							modifier = {
								factor = 10
								owner = {
									not = {
										is_country = root.owner
									}
									is_homicidal = yes
								}
							}
							if = {
								limit = {
									has_global_flag = hfe_plague_logs
								}
								log = "Plague. Not send to new planet"
							}
						}
						# send plague
						30 = {
							# amenities
							modifier = {
								factor = 1.25
								free_amenities < 0
							}
							modifier = {
								factor = 1.25
								free_amenities < -10
							}
							modifier = {
								factor = 1.25
								free_amenities < -20
							}
							# crime
							modifier = {
								factor = 1.25
								planet_crime > 10
							}
							modifier = {
								factor = 1.25
								planet_crime > 20
							}
							modifier = {
								factor = 1.25
								planet_crime > 30
							}
							modifier = {
								factor = 1.25
								planet_crime > 40
							}
							modifier = {
								factor = 1.25
								planet_crime > 50
							}
							modifier = {
								factor = 1.25
								planet_crime > 60
							}
							modifier = {
								factor = 1.25
								planet_crime > 70
							}
							modifier = {
								factor = 1.25
								planet_crime > 80
							}
							modifier = {
								factor = 1.25
								planet_crime > 90
							}
							# pop ammount scale
							modifier = {
								factor = 2
								count_owned_pop = {
									limit = {
										hfe_trigger_plague_is_immune = no
									}
									count > 100
								}
							}
							modifier = {
								factor = 2
								count_owned_pop = {
									limit = {
										hfe_trigger_plague_is_immune = no
									}
									count > 90
								}
							}
							modifier = {
								factor = 2
								count_owned_pop = {
									limit = {
										hfe_trigger_plague_is_immune = no
									}
									count > 80
								}
							}
							modifier = {
								factor = 2
								count_owned_pop = {
									limit = {
										hfe_trigger_plague_is_immune = no
									}
									count > 70
								}
							}
							modifier = {
								factor = 2
								count_owned_pop = {
									limit = {
										hfe_trigger_plague_is_immune = no
									}
									count > 60
								}
							}
							modifier = {
								factor = 2
								count_owned_pop = {
									limit = {
										hfe_trigger_plague_is_immune = no
									}
									count > 50
								}
							}
							modifier = {
								factor = 2
								count_owned_pop = {
									limit = {
										hfe_trigger_plague_is_immune = no
									}
									count > 40
								}
							}
							modifier = {
								factor = 2
								count_owned_pop = {
									limit = {
										hfe_trigger_plague_is_immune = no
									}
									count > 30
								}
							}
							modifier = {
								factor = 2
								count_owned_pop = {
									limit = {
										hfe_trigger_plague_is_immune = no
									}
									count > 20
								}
							}
							modifier = {
								factor = 2
								count_owned_pop = {
									limit = {
										hfe_trigger_plague_is_immune = no
									}
									count > 10
								}
							}
							if = {
								limit = {
									has_global_flag = hfe_plague_logs
								}
								log = "Plague. Send to new planet"
							}
							planet_event = {
								id = hfe_plague.1
								days = 180
								random = 180
							}
						}
					}
				}
			}
		}
	}
}

# reduce the counter after 10 years 4
planet_event = {
	id = hfe_plague.4
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		exists = owner
		has_planet_flag = hfe_plague_planet
	}
	immediate = {
		if = {
			limit = {
				has_global_flag = hfe_plague_logs
			}
			log = "Plague. Reducing counters by 10 years delay"
		}
		every_playable_country = {
			limit = {
				has_event_chain = hfe_chain_plague_count
			}
			add_event_chain_counter = {
				event_chain = hfe_chain_plague_count
				counter = hfe_chain_plague_infested_planet_total
				amount = -1
			}
		}
		owner = {
			if = {
				limit = {
					has_event_chain = hfe_chain_plague_count
				}
				add_event_chain_counter = {
					event_chain = hfe_chain_plague_count
					counter = hfe_chain_plague_infested_planet
					amount = -1
				}
			}
		}
	}
}

# reduce the counter and send notification 11
# on_planet_ownerless
#From = Country scope
#This = Planet scope
planet_event = {
	id = hfe_plague.11
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		exists = owner
		or = {
			has_planet_flag = hfe_plague_planet
			and = {
				exists = controller
				controller = {
					is_country_type = hfe_plague_zombie
				}
			}
		}
	}
	immediate = {
		if = {
			limit = {
				has_global_flag = hfe_plague_logs
			}
			log = "Plague. Reducing counters by on_planet_ownerless"
		}
		owner = {
			if = {
				limit = {
					has_event_chain = hfe_chain_plague_count
				}
				add_event_chain_counter = {
					event_chain = hfe_chain_plague_count
					counter = hfe_chain_plague_infested_planet
					amount = -1
				}
				add_event_chain_counter = {
					event_chain = hfe_chain_plague_count
					counter = hfe_chain_plague_kill_planet_count
					amount = 1
				}
			}
			country_event = {
				id = hfe_plague.61
			}
		}
		every_playable_country = {
			limit = {
				has_event_chain = hfe_chain_plague_count
			}
			add_event_chain_counter = {
				event_chain = hfe_chain_plague_count
				counter = hfe_chain_plague_infested_planet_total
				amount = -1
			}
			add_event_chain_counter = {
				event_chain = hfe_chain_plague_count
				counter = hfe_chain_plague_kill_planet_count_total
				amount = 1
			}
		}
	}
}

# zombies take planet 5
# on_planet_attackers_win
# (Before controller is switched)
# This = country, leader attacker
# From = country, planet owner
# FromFrom = planet
country_event = {
	id = hfe_plague.5
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		is_country_type = hfe_plague_zombie
		exists = from
		exists = fromfrom
	}
	immediate = {
		if = {
			limit = {
				has_global_flag = hfe_plague_logs
			}
			log = "Plague. Zombies take planet [fromfrom.GetName] in [fromfrom.solar_system.GetName] owner: [from.GetName]"
		}
		from = {
			country_event = {
				id = hfe_plague.62
				scopes = {
					from = fromfrom
				}
			}
			if = {
				limit = {
					not = {
						has_communications = root
					}
				}
				establish_communications_no_message = root
			}
		}
		fromfrom = {
			# set_controller = root
			# set_owner = root
			every_owned_pop = {
				unemploy_pop = yes
			}
			check_planet_employment = yes
		}
	}
}

# retake zombie planet 6
# on_planet_attackers_win
# (Before controller is switched)
# This = country, leader attacker
# From = country, planet owner
# FromFrom = planet
country_event = {
	id = hfe_plague.6
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		exists = owner
		exists = fromfrom
		from = {
			is_country_type = hfe_plague_zombie
		}
	}
	immediate = {
		if = {
			limit = {
				has_global_flag = hfe_plague_logs
			}
			log = "Plague. Take planet [fromfrom.GetName] in [fromfrom.solar_system.GetName] from zombies new owner: [from.GetName]"
		}
		country_event = {
			id = hfe_plague.63
			scopes = {
				from = fromfrom
			}
		}
		fromfrom = {
			# for backward compatibility, remove later
			if = {
				limit = {
					is_owned_by = from
				}
				set_controller = root
				set_owner = root
			}
			every_owned_pop = {
				unemploy_pop = yes
			}
			check_planet_employment = yes
		}
	}
}

# add purged pop to stats 7
# on_pop_purged
# This = Planet scope
# From = Country
# FromFrom = Pop
planet_event = {
	id = hfe_plague.7
	is_triggered_only = yes
	hide_window = yes
	trigger = {
		exists = fromfrom
		fromfrom = {
			has_job = hfe_plague_purge
		}
	}
	immediate = {
		if = {
			limit = {
				has_global_flag = hfe_plague_logs
			}
			log = "Plague. purged pop added to stats"
		}
		every_playable_country = {
			limit = {
				has_event_chain = hfe_chain_plague_count
			}
			add_event_chain_counter = {
				event_chain = hfe_chain_plague_count
				counter = hfe_chain_plague_kill_pop_count_total
				amount = 1
			}
		}
	}
}

# clear zombie planet by orbital bombardment 8
# Planet has reached 0 health from orbital bombardment
# This = Planet
# From = Bombarder
planet_event = {
	id = hfe_plague.8
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		exists = owner
		owner = {
			is_country_type = hfe_plague_zombie
		}
		num_pops = 0
		planet_devastation > 80
	}
	immediate = {
		if = {
			limit = {
				has_global_flag = hfe_plague_logs
			}
			log = "Plague. Destroy zombie colony [this.GetName] in [solar_system.GetName]"
		}
		destroy_colony = yes
	}
}

# plague report notification 9
# on_tech_increased
country_event = {
	id = hfe_plague.9
	title = hfe_plague.9.name
	desc = {
		trigger = {
			text = hfe_plague.9.desc.0
			success_text = {
				text = hfe_plague.9.desc.1
				any_owned_planet = {
					habitable_structure = yes
				}
			}
			success_text = {
				text = hfe_plague.9.desc.2
				any_owned_planet = {
					is_planet_class = pc_gaia
				}
			}
			success_text = {
				text = hfe_plague.9.desc.3
				has_tradition = tr_psionics_psi_corps
			}
			success_text = {
				text = hfe_plague.9.desc.4
				has_tradition = tr_psionics_psionic_assimilation
			}
			text = hfe_plague.9.desc.5
		}
	}
	show_sound = event_laboratory_sound
	is_triggered_only = yes
	diplomatic = yes
	trigger = {
		last_increased_tech = hfe_tech_plague_study
		has_global_flag = hfe_plague_started
	}
	immediate = {
		# for localisation
		random_owned_planet = {
			limit = {
				is_planet_class = pc_gaia
			}
			save_event_target_as = hfe_plague_gaia
		}
		random_owned_leader = {
			limit = {
				leader_class = scientist
			}
			save_event_target_as = hfe_plague_scientist_portrait
		}
	}
	picture_event_data = {
		portrait = event_target:hfe_plague_scientist_portrait
		room = hfe_lab_room
	}
	option = {
		name = DISCONCERTING
		exclusive_trigger = {
			is_gestalt = yes
		}
	}
	option = {
		name = hfe_plague.9.0
		custom_tooltip = hfe_plague.9.0.tooltip
		hidden_effect = {
			country_event = {
				id = hfe_plague.10
				days = 2
			}
		}
	}
}

# second diplo event 10
country_event = {
	id = hfe_plague.10
	title = hfe_plague.10.name
	desc = {
		trigger = {
			text = hfe_plague.10.desc.0
			text = hfe_plague.10.desc.1
			# for now refuges do not spread plague, so disable it
			# success_text = {
			# 	text = hfe_plague.10.desc.2.0
			# 	has_policy_flag = refugees_allowed
			# }
			text = hfe_plague.10.desc.3
			success_text = {
				text = hfe_plague.10.desc.4.0
				has_authority = auth_democratic
				allows_purge = yes
			}
			success_text = {
				text = hfe_plague.10.desc.4.1
				has_authority = auth_oligarchic
				allows_purge = yes
			}
			success_text = {
				text = hfe_plague.10.desc.4.2
				has_authority = auth_dictatorial
				allows_purge = yes
			}
			success_text = {
				text = hfe_plague.10.desc.4.3
				has_authority = auth_imperial
				allows_purge = yes
			}
			success_text = {
				text = hfe_plague.10.desc.4.4
				has_authority = auth_corporate
				allows_purge = yes
			}
		}
	}
	show_sound = event_celebration
	is_triggered_only = yes
	diplomatic = yes
	trigger = {
		is_gestalt = no
	}
	immediate = {
		random_owned_leader = {
			limit = {
				is_ruler = yes
			}
			save_event_target_as = hfe_plague_ruler_portrait
		}
	}
	picture_event_data = {
		portrait = event_target:hfe_plague_ruler_portrait
		room = ethic_spaceship_room
		# planet_background = root
		# graphical_culture = root
		# city_level = root
		# room = root
	}
	option = {
		name = hfe_plague.10.0
		add_modifier = {
			modifier = hfe_unity
			years = 1
		}
	}
}

# inform events 50 - 100
# plague start inform
country_event = {
	id = hfe_plague.50
	title = hfe_plague.50.name
	desc = hfe_plague.50.desc
	picture = GFX_evt_news_room
	show_sound = event_laboratory_sound
	is_triggered_only = yes
	option = {
		name = hfe_plague.50.0
	}
	# robots
	option = {
		name = hfe_plague.50.1.0
		exclusive_trigger = {
			hfe_trigger_is_robot = yes
			or = {
				is_xenophobe = yes
				is_homicidal = yes
			}
		}
		hfe_effect_xenophobe_attraction.0 = yes
	}
	option = {
		name = hfe_plague.50.1.1
		exclusive_trigger = {
			hfe_trigger_is_robot = yes
			or = {
				is_xenophile = yes
				has_valid_civic = civic_machine_servitor
			}
		}
		hfe_effect_xenophile_attraction.0 = yes
	}
	option = {
		name = hfe_plague.50.1.2
		exclusive_trigger = {
			hfe_trigger_is_robot = yes
		}
	}
	# brainworm
	option = {
		name = hfe_plague.50.2
		exclusive_trigger = {
			hfe_trigger_brainworm_country = yes
		}
		hfe_effect_add_unity.1 = yes
	}
	# discovery
	option = {
		name = hfe_plague.50.3
		exclusive_trigger = {
			has_country_flag = hfe_discovery
		}
	}
	# materialist-spiritualist
	option = {
		name = hfe_plague.50.4
		#custom_tooltip = hfe_plague.50.4.tooltip
		exclusive_trigger = {
			or = {
				is_spiritualist = yes
				is_materialist = yes
			}
		}
	}
}

# plague lvl 2 inform
country_event = {
	id = hfe_plague.51
	title = hfe_plague.51.name
	desc = {
		trigger = {
			text = hfe_plague.51.desc.0.0
			success_text = {
				text = hfe_plague.51.desc.1.0
				has_country_flag = hfe_plague_meet
			}
			fail_text = {
				text = hfe_plague.51.desc.1.1
				has_country_flag = hfe_plague_meet
			}
		}
	}
	picture = GFX_evt_news_room
	show_sound = event_life_support_fail
	is_triggered_only = yes
	immediate = {
		remove_country_flag = hfe_plague_meet
	}
	option = {
		name = CURSES
	}
	option = {
		name = hfe_plague.51.0
		exclusive_trigger = {
			is_spiritualist = yes
		}
	}
	option = {
		name = hfe_plague.51.1
		exclusive_trigger = {
			is_materialist = yes
		}
	}
	after = {
		if = {
			limit = {
				has_country_flag = hfe_plague_meet
			}
			add_research_option = hfe_tech_plague_study
		}
	}
}

# plague lvl 3 inform
country_event = {
	id = hfe_plague.52
	title = hfe_plague.52.name
	desc = hfe_plague.52.desc
	picture = GFX_evt_news_room
	show_sound = event_red_alert
	is_triggered_only = yes
	trigger = {
		is_ai = no
	}
	immediate = {
		remove_country_flag = hfe_plague_meet
	}
	option = {
		name = DISCONCERTING
		hidden_effect = {
			play_sound = event_screams
		}
	}
}

# plague on our planet + empire infected notification (first planet get plague, check for ever meet plague)
country_event = {
	id = hfe_plague.53
	title = hfe_plague.53.name
	desc = {
		trigger = {
			# regular texts
			success_text = {
				text = hfe_plague.53.desc.0.0
				not = {
					has_global_flag = hfe_plague_lvl_2
				}
				has_country_flag = hfe_plague_meet
			}
			success_text = {
				text = hfe_plague.53.desc.0.1
				not = {
					has_global_flag = hfe_plague_lvl_3
				}
				has_country_flag = hfe_plague_meet
			}
			success_text = {
				text = hfe_plague.53.desc.0.2
				has_global_flag = hfe_plague_lvl_3
				has_country_flag = hfe_plague_meet
			}
			# meet plague texts
			success_text = {
				text = hfe_plague.53.desc.1.0
				nor = {
					has_country_flag = hfe_plague_meet
					has_global_flag = hfe_plague_lvl_2
					has_global_flag = hfe_plague_lvl_3
				}
			}
			success_text = {
				text = hfe_plague.53.desc.1.1
				has_global_flag = hfe_plague_lvl_2
				nor = {
					has_country_flag = hfe_plague_meet
					has_global_flag = hfe_plague_lvl_3
				}
			}
			success_text = {
				text = hfe_plague.53.desc.1.2
				has_global_flag = hfe_plague_lvl_3
				not = {
					has_country_flag = hfe_plague_meet
				}
			}
			# show name of plague source
			success_text = {
				text = hfe_plague.53.desc.2.0
				has_technology = hfe_tech_plague_study
				exists = fromfrom
			}
		}
	}
	picture = {
		trigger = {
			has_global_flag = hfe_plague_lvl_3
			not = {
				has_country_flag = hfe_plague_meet
			}
		}
		picture = GFX_evt_hfe_zombie
	}
	picture = {
		trigger = {
			has_global_flag = hfe_plague_lvl_2
			not = {
				has_country_flag = hfe_plague_meet
			}
		}
		picture = GFX_evt_hfe_plague
	}
	picture = GFX_evt_news_room
	show_sound = event_life_support_fail
	is_triggered_only = yes
	location = from
	trigger = {
		#is_ai = no
		nand = {
			has_country_flag = hfe_plague_block_planet
			has_country_flag = hfe_plague_meet
		}
	}
	after = {
		hidden_effect = {
			set_country_flag = hfe_plague_meet
		}
	}
	option = {
		name = galactic_features.361.a
		if = {
			limit = {
				has_global_flag = hfe_plague_lvl_2
				nor = {
					has_tech_option = hfe_tech_plague_study
					has_technology = hfe_tech_plague_study
				}
			}
			add_research_option = hfe_tech_plague_study
		}
	}
	option = {
		name = hfe_block
		custom_tooltip = hfe_plague_block.tooltip
		trigger = {
			has_country_flag = hfe_plague_meet
		}
		hidden_effect = {
			set_country_flag = hfe_plague_block_planet
		}
	}
}

# plague on our planet pulse
country_event = {
	id = hfe_plague.56
	title = hfe_plague.56.name
	desc = {
		trigger = {
			fail_text = {
				text = hfe_plague.56.desc.0
				has_global_flag = hfe_plague_lvl_3
			}
			success_text = {
				text = hfe_plague.56.desc.1
				has_global_flag = hfe_plague_lvl_3
			}
		}
	}
	picture = GFX_evt_hfe_plague
	show_sound = event_life_support_fail
	is_triggered_only = yes
	location = from
	trigger = {
		is_ai = no
		not = {
			has_country_flag = hfe_plague_block_pulse
		}
	}
	option = {
		name = hfe_plague.56.0
		trigger = {
			not = {
				has_global_flag = hfe_plague_lvl_3
			}
		}
	}
	option = {
		name = hfe_plague.56.1
		trigger = {
			has_global_flag = hfe_plague_lvl_3
		}
	}
	option = {
		name = hfe_block
		custom_tooltip = hfe_plague_block.tooltip
		hidden_effect = {
			set_country_flag = hfe_plague_block_pulse
		}
	}
}

# pop gain immune
country_event = {
	id = hfe_plague.58
	title = hfe_plague.58.name
	desc = hfe_plague.58.desc
	picture = GFX_evt_hfe_lab
	show_sound = event_celebration
	is_triggered_only = yes
	location = from
	trigger = {
		not = {
			has_technology = hfe_tech_plague_immune
		}
	}
	immediate = {
		if = {
			limit = {
				has_global_flag = hfe_plague_logs
			}
			log = "Plague. [Root.GetName] now know immune"
		}
	}
	option = {
		name = hfe_plague.58.0
		hfe_effect_plague_give_immune_tech_boost = yes
	}
}

# everyone die on planet notification for owner
country_event = {
	id = hfe_plague.61
	title = hfe_plague.61.name
	desc = hfe_plague.61.desc
	picture = {
		trigger = {
			has_country_flag = hfe_random_0
		}
		picture = GFX_evt_hfe_ruins
	}
	picture = {
		trigger = {
			has_country_flag = hfe_random_1
		}
		picture = GFX_evt_city_ruins
	}
	show_sound = event_ghost_town
	is_triggered_only = yes
	location = from
	trigger = {
		is_ai = no
		exists = from
		from = {
			not = {
				has_planet_flag = hfe_plague_bombardment_planet
			}
		}
		not = {
			has_country_flag = hfe_plague_block_all_die
		}
	}
	immediate = {
		hfe_effect_random_roll_flags_2_country = yes
	}
	option = {
		name = hfe_plague.61.0
	}
	option = {
		name = hfe_block
		custom_tooltip = hfe_plague_block.tooltip
		hidden_effect = {
			set_country_flag = hfe_plague_block_all_die
		}
	}
}

# planet lost to zombie notification
country_event = {
	id = hfe_plague.62
	title = hfe_plague.62.name
	desc = hfe_plague.62.desc
	picture = GFX_evt_hfe_zombie
	show_sound = event_screams
	is_triggered_only = yes
	location = from
	trigger = {
		is_ai = no
		not = {
			has_country_flag = hfe_plague_block_zombie
		}
	}
	option = {
		name = hfe_plague.62.0
	}
	option = {
		name = hfe_block
		custom_tooltip = hfe_plague_block.tooltip
		hidden_effect = {
			set_country_flag = hfe_plague_block_zombie
		}
	}
}

# retake zombie planet notification
country_event = {
	id = hfe_plague.63
	title = hfe_plague.63.name
	desc = hfe_plague.63.desc
	picture = GFX_evt_hfe_zombie
	show_sound = event_ground_battle
	is_triggered_only = yes
	location = from
	option = {
		name = EXCELLENT
	}
	option = {
		exclusive_trigger = {
			is_authoritarian = yes
		}
		name = hfe_plague.63.0
	}
	option = {
		exclusive_trigger = {
			is_egalitarian = yes
		}
		name = hfe_plague.63.1
	}
	option = {
		exclusive_trigger = {
			is_xenophobe = yes
		}
		name = hfe_plague.63.2
	}
	option = {
		exclusive_trigger = {
			is_militarist = yes
		}
		name = hfe_plague.63.4
	}
	option = {
		exclusive_trigger = {
			is_spiritualist = yes
		}
		name = hfe_plague.63.6
	}
	after = {
		hfe_effect_add_unity.1 = yes
	}
}

# events on first plague planet 100 - 150
# planet_event = {
# id = hfe_plague.100
# title = hfe_plague.100.name
# desc = hfe_plague.100.desc
# picture = GFX_evt_hfe_plague
# show_sound = event_air_raid_siren
# is_triggered_only = yes
# location = root
# trigger = {
# exists = owner
# owner = {
# not = {
# has_country_flag = hfe_plague_fist_time
# }
# }
# }
# immediate = {
# set_timed_planet_flag = {
# flag = hfe_plague_fist_planet days = 3650
# }
# owner = {
# set_country_flag = hfe_plague_fist_time
# }
# }
# option = {
# name = hfe_plague.100.0
# }
# }
# bombardment event 150 - 200
# bombarding infected planet after project finished
ship_event = {
	id = hfe_plague.150
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		event_target:hfe_project_plague_planet_bombardment_target = {
			if = {
				limit = {
					has_global_flag = hfe_plague_logs
				}
				log = "Plague. Bombard plague planet [this.GetName] owner [owner.GetName]"
			}
			set_timed_planet_flag = {
				flag = hfe_plague_bombardment_planet
				years = 10
			}
			if = {
				limit = {
					num_pops > 0
				}
				random_owned_pop = {
					save_event_target_as = hfe_plague_purged_species
				}
				owner = {
					every_relation = {
						limit = {
							not = {
								is_same_species = event_target:hfe_plague_purged_species
							}
							allows_purge = no
							or = {
								is_country_type = default
								has_ai_personality = awakened_fallen_empire_xenophile
							}
						}
						add_opinion_modifier = {
							who = root.owner
							modifier = opinion_genocidal
						}
					}
					every_relation = {
						limit = {
							is_same_species = event_target:hfe_plague_purged_species
							allows_purge = no
						}
						add_opinion_modifier = {
							who = root.owner
							modifier = opinion_genocidal_our_species
						}
					}
				}
			}
			hfe_effect_plague_planet_clean = yes
			destroy_colony = yes
			add_modifier = {
				modifier = hfe_plague_bombardment_planet
				years = 100
			}
		}
		# ???????? ?????? ????????
		owner = {
			country_event = {
				id = hfe_plague.152
			}
		}
	}
}

# check if planet still has owner 151
ship_event = {
	id = hfe_plague.151
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		event_target:hfe_project_plague_planet_bombardment_target = {
			not = {
				exists = owner
			}
		}
	}
	immediate = {
		owner = {
			abort_special_project = {
				type = hfe_project_plague_planet_bombardment
				location = event_target:hfe_project_plague_planet_bombardment_target
			}
		}
	}
}

# inform event
country_event = {
	id = hfe_plague.152
	title = hfe_plague.152.name
	desc = hfe_plague.152.desc
	picture = GFX_evt_ground_combat
	show_sound = event_wind_ruins
	is_triggered_only = yes
	trigger = {
		not = {
			has_country_flag = hfe_plague.153_block
		}
	}
	option = {
		name = hfe_plague.152.0
	}
	option = {
		name = hfe_block
		custom_tooltip = hfe_block.tooltip
		hidden_effect = {
			set_country_flag = hfe_plague.153_block
		}
	}
}

# on_terraforming_complete
# may be increse tarraforming cost
planet_event = {
	id = hfe_plague.153
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_modifier = hfe_plague_bombardment_planet
	}
	immediate = {
		remove_modifier = hfe_plague_bombardment_planet
	}
}

# get total war cb vs robots 160
country_event = {
	id = hfe_plague.160
	title = hfe_plague.160.name
	desc = hfe_plague.160.desc
	picture = GFX_evt_ground_combat
	show_sound = event_celebration
	is_triggered_only = yes
	trigger = {
		has_global_flag = hfe_plague_lvl_2
		is_machine_empire = no
		is_at_war = no
		any_relation = {
			is_machine_empire = yes
			# relative_power = {
			# who = root
			# category = fleet
			# value >= equivalent
			# }
			root = {
				not = {
					has_casus_belli = {
						target = prev
						type = hfe_cb_annex
					}
				}
			}
		}
		any_owned_planet = {
			has_planet_flag = hfe_plague_planet
		}
	}
	immediate = {
		random_relation = {
			limit = {
				is_machine_empire = yes
				# relative_power = {
				# who = root
				# category = fleet
				# value >= equivalent
				# }
				root = {
					not = {
						has_casus_belli = {
							target = prev
							type = hfe_cb_annex
						}
					}
				}
			}
			save_event_target_as = hfe_plague_160_machine
		}
	}
	option = {
		name = hfe_plague.160.0
		add_casus_belli = {
			type = hfe_cb_annex
			who = event_target:hfe_plague_160_machine
			days = 365
		}
	}
	option = {
		name = hfe_plague.160.1
	}
}

# plague bombardment 161
# on_planet_zero_health
# Planet has reached 0 health from orbital bombardment
# This = Planet
# From = Bombarder
planet_event = {
	id = hfe_plague.161
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		num_pops > 0
		exists = owner
		exists = from
		has_orbital_bombardment_stance = hfe_stance_plague_spread
		# should it be 50+ ?
		planet_devastation > 20
	}
	immediate = {
		if = {
			limit = {
				has_global_flag = hfe_plague_logs
			}
			log = "Plague. Plague bombarding type on [root.GetName] in [solar_system.GetName]"
		}
		planet_event = {
			id = hfe_plague.1
		}
	}
}

# notification for getting immune tech and also option to share it 170
# on_tech_increased
country_event = {
	id = hfe_plague.170
	title = hfe_plague.170.name
	desc = {
		trigger = {
			text = hfe_plague.170.desc.0
			success_text = {
				text = hfe_plague.170.desc.1
				any_relation = {
					is_country_type = default
					not = {
						has_technology = hfe_tech_plague_immune
					}
					# filter out very bad relations like purifers, still purifiers of same species will do it
					their_opinion = {
						who = root
						value > -500
					}
				}
			}
		}
	}
	picture = GFX_evt_news_room
	show_sound = event_celebration
	is_triggered_only = yes
	trigger = {
		last_increased_tech = hfe_tech_plague_immune
	}
	# have nobody to share
	option = {
		name = EXCELLENT
		exclusive_trigger = {
			not = {
				any_relation = {
					is_country_type = default
					not = {
						has_technology = hfe_tech_plague_immune
					}
					# filter out very bad relations like purifers, still purifiers of same species will do it
					their_opinion = {
						who = root
						value > -500
					}
				}
			}
		}
		hfe_effect_add_unity.1 = yes
	}
	# share to everyone, almost everyone
	option = {
		name = hfe_plague.170.0
		trigger = {
			is_xenophobe = no
		}
		hfe_effect_xenophile_attraction.3 = yes
		hidden_effect = {
			every_relation = {
				limit = {
					is_country_type = default
					not = {
						has_technology = hfe_tech_plague_immune
					}
					# filter out very bad relations like purifers, still purifiers of same species will do it
					their_opinion = {
						who = root
						value > -500
					}
				}
				country_event = {
					id = hfe_plague.171
					days = 1
					random = 15
				}
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 100
				is_xenophile = yes
			}
		}
	}
	# share to federation or friends
	option = {
		name = hfe_plague.170.1
		if = {
			limit = {
				exists = federation
			}
			custom_tooltip = hfe_plague.170.1.tooltip
		}
		hfe_effect_xenophile_attraction.2 = yes
		hidden_effect = {
			every_relation = {
				limit = {
					is_country_type = default
					not = {
						has_technology = hfe_tech_plague_immune
					}
					or = {
						is_in_federation_with = root
						their_opinion = {
							who = root
							value > 50
						}
					}
				}
				country_event = {
					id = hfe_plague.171
					days = 1
					random = 15
				}
			}
		}
	}
	# share to federation only
	option = {
		name = hfe_plague.170.2
		trigger = {
			exists = federation
		}
		hfe_effect_xenophile_attraction.1 = yes
		hidden_effect = {
			every_federation_ally = {
				limit = {
					is_country_type = default
					not = {
						has_technology = hfe_tech_plague_immune
					}
				}
				country_event = {
					id = hfe_plague.171
					days = 1
					random = 15
				}
			}
		}
	}
	# not share
	option = {
		name = hfe_plague.170.3
		trigger = {
			is_xenophile = no
		}
		hfe_effect_xenophobe_attraction.2 = yes
	}
}

country_event = {
	id = hfe_plague.171
	title = hfe_plague.171.name
	desc = hfe_plague.171.desc
	picture = GFX_evt_news_room
	show_sound = event_celebration
	location = from
	is_triggered_only = yes
	trigger = {
		exists = from
	}
	option = {
		name = hfe_plague.171.0
		exclusive_trigger = {
			has_technology = hfe_tech_plague_immune
		}
	}
	option = {
		name = EXCELLENT
		hfe_effect_plague_give_immune_tech_boost = yes
		add_opinion_modifier = {
			who = from
			modifier = hfe_opinion_immune_shared
		}
	}
}
