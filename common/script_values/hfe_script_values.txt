# hfe_system_fleets_power = {
# 	base = 0
# 	complex_trigger_modifier = {
# 		trigger = any_fleet_in_system
# 		trigger_scope = fleet
# 		parameters = {
# 			exists = owner
# 			owner = {
# 				is_hostile = root.owner
# 			}
# 		}
# 		potential = {
# 			solar_system = {
# 				any_system_colony = {
# 					NOT = {
# 						is_same_value = prevprev
# 					}
# 					planet_stability >= @stabilitylevel3
# 					num_pops > 5
# 				}
# 			}
# 		}
# 		desc = STRING_LOYAL_PLANETS_IN_SYSTEM
# 		mode = subtract
# 		mult = 2
# 	}
# 	modifier = {
# 		set = 1
# 		trigger:fleet_power
# 	}
# 	modifier = {
# 		factor = 2
# 		or = {
# 			is_country_type = default
# 			is_country_type = hfe_pirate
# 			is_country_type = hfe_drone
# 		}
# 		controlled_systems > 3
# 		years_passed < 100
# 	}
# }
# planet scope
hfe_script_value_capital_lvl = {
	base = 0
	modifier = {
		add = 1
		has_upgraded_capital = yes
	}
	modifier = {
		add = 1
		has_major_upgraded_capital = yes
	}
	modifier = {
		add = 1
		has_fully_upgraded_capital = yes
	}
}

# up to 200 years
hfe_script_value_years_passed_1_to_10 = {
	set = trigger:years_passed
	divide = 20
	round = yes
	min = 1
	max = 10
}

hfe_script_value_years_passed_1_to_20 = {
	set = trigger:years_passed
	divide = 10
	round = yes
	min = 1
	max = 20
}

hfe_script_value_difficulty_twice_scale = {
	add = trigger:is_difficulty
	divide = 6
	add = 1
}

hfe_script_value_difficulty_scale = {
	add = trigger:is_difficulty
	add = 1
}

hfe_script_value_free_jobs = {
	add = trigger:free_jobs
	divide = 2
	min = 1
}

# need exp here
# hfe_script_value_free_housing = {
# 	add = trigger:free_housing
# 	divide = 2
# 	min = -5
# 	max = 5
# 	pow = 2
# }
hfe_script_value_job_weights_army_modifier = {
	set = 1
	add = modifier:army_defense_damage_mult
	add = modifier:army_damage_mult
	# change it latter to put in line with other weights
	mult = 4
	min = 1
}

hfe_script_value_weight_num_planets_with_deposit_in_system = {
	complex_trigger_modifier = {
		trigger = count_system_planet
		parameters = {
			limit = {
				has_deposit = yes
			}
		}
		mode = add
	}
	mult = 5
	min = 1
}

hfe_script_value_weight_trust = {
	complex_trigger_modifier = {
		trigger = trust
		parameters = {
			who = prev
		}
		mode = add
	}
	divide = 10
	min = 1
}

hfe_script_value_opinion = {
	complex_trigger_modifier = {
		trigger_scope = $country0$
		trigger = opinion
		parameters = {
			who = $country1$
		}
		mode = add
	}
}

hfe_script_value_pow_2 = {
	set = 2
	pow = $val$
	floor = yes
}

# less weight if country1 weakier
hfe_script_value_weight_relative_fleet_power = {
	set = 1
	modifier = {
		$country0$ = {
			relative_power = {
				who = $country1$
				value = overwhelming
				category = fleet
			}
		}
		mult = 4
	}
	modifier = {
		$country0$ = {
			relative_power = {
				who = $country1$
				value = superior
				category = fleet
			}
		}
		mult = 2
	}
	modifier = {
		$country0$ = {
			relative_power = {
				who = $country1$
				value = inferior
				category = fleet
			}
		}
		divide = 2
	}
	modifier = {
		$country0$ = {
			relative_power = {
				who = $country1$
				value = pathetic
				category = fleet
			}
		}
		divide = 4
	}
}

hfe_script_value_weight_opposing_ethics_divergence_reduce = {
	set = 1
	divide = value:hfe_script_value_weight_opposing_ethics_divergence|country|$country$|
}

hfe_script_value_weight_opposing_ethics_divergence = {
	complex_trigger_modifier = {
		trigger = opposing_ethics_divergence
		parameters = {
			who = $country$
		}
		mode = add
	}
	min = 1
}

hfe_script_value_count_owned_pop_exact_same_species = {
	complex_trigger_modifier = {
		trigger_scope = root
		trigger = count_owned_pop
		parameters = {
			limit = {
				# this pop, prev country, prevprev species or whatever value applied to
				is_exact_same_species = prevprev
			}
		}
		mode = add
	}
}

hfe_script_value_scale_for_every_thousand_in_stockpile = {
	complex_trigger_modifier = {
		trigger = resource_stockpile_compare
		parameters = {
			resource = $resource$
		}
		mode = add
	}
	divide = 1000
	floor = yes
}

hfe_script_value_mul_two_values = {
	set = $val0$
	mult = $val1$
}

hfe_script_value_pop_percentage_spiritualist = {
	complex_trigger_modifier = {
		trigger = pop_percentage
		parameters = {
			limit = {
				has_ethic = ethic_spiritualist
			}
		}
		mode = set
	}
}

# copy past from vanilla with adding 3d resource
hfe_script_value_job_weights_triple_resources_modifier = {
	complex_trigger_modifier = {
		trigger = check_economic_production_modifier_for_job
		parameters = {
			job = $JOB$
			resource = {
				$RESOURCE1$ = $WEIGHT1$
				$RESOURCE2$ = $WEIGHT2$
				$RESOURCE3$ = $WEIGHT3$
			}
		}
		mode = add
	}
	add = value:job_weights_manual_corrections|JOB|$JOB$|
	add = 1
	min = 0
	pow = 3	#we need it to have a bit more impact
	modifier = {
		owner = {
			has_deficit = $RESOURCE1$
		}
		mult = @\[ 10 * $WEIGHT1$ ]
	}
	modifier = {
		owner = {
			has_deficit = $RESOURCE2$
		}
		mult = @\[ 10 * $WEIGHT2$ ]
	}
	modifier = {
		owner = {
			has_deficit = $RESOURCE3$
		}
		mult = @\[ 10 * $WEIGHT3$ ]
	}
}

# hfe_script_value_test = {
# 	complex_trigger_modifier = {
# 		trigger = opposing_ethics_divergence
# 		parameters = {
# 			who = event_target:hfe_event_target_0
# 		}
# 		mode = add
# 	}
# }