# this = country
on_monthly_pulse_country = {
	events = {
		hfe_maintenance.105
	}
}

on_yearly_pulse_country = {
	events = {
		hfe_maintenance.10
		hfe_maintenance.100
	}
}

on_bi_yearly_pulse_country = {
	events = {
		hfe_maintenance.101
	}
}

on_bi_yearly_pulse = {
	events = {
		hfe_maintenance.102
	}
}

on_decade_pulse_country = {
	events = {
		hfe_maintenance.103
	}
}

on_decade_pulse = {
	events = {
		hfe_maintenance.104
	}
}

# Triggers when the game starts
on_game_start = {
	events = {
		hfe_init.0
		hfe_init.1
	}
}

on_game_start_country = {
	events = {
		# discovery start
		hfe_discovery.0
		# exodus origin
		hfe_features.4
		# aftermatch origin
		hfe_features.5
		# early colonization origin
		hfe_features.10
		# early contact origin
		hfe_features.11
		# spiral_of_death origin
		hfe_features_spiral_of_death.0
		# sanctuary origin
		hfe_features.12
	}
}

# a new leader is generated for an empire, to be available for recruitment
# scope: country, from: leader
on_leader_spawned = {
	events = {
		# add pirate trait to admiral
		hfe_pirate.55
		# change brainworm leader species
		hfe_brainworm.6
		# fixing leaders traits
		hfe_leaders.104
	}
}

# Called during empire initialization when starting a new game if has_secondary_species game rule is true.
# Called before empire_init_create_capital_pops.
# scope: planet
# from: founder species
# fromfrom: secondary species (if exists)
empire_init_capital_planet = {
	events = {
		# brainworm
		hfe_brainworm.0
	}
}

# called during empire initialization when starting a new game
# scope: country
empire_init_create_ships = {
	events = {
		# hfe_civic_features_designed_aristocracy affect starting leaders
		hfe_features.2
	}
}

# A leader leveled up.
# Scope = Country
# From = Leader
# on_leader_level_up = {
# 	events = {
# 		# new traits
# 		# hfe_leaders.1
# 	}
# }

# A country has increased the level of a tech, use last_increased_tech trigger to check tech and level.
# This = Country
on_tech_increased = {
	events = {
		# plague explain
		hfe_plague.9
		# share cure for plague
		hfe_plague.170
		# scientist satanist can generate tech
		hfe_leaders.108
		# navigator
		hfe_population.112
	}
}

# Triggers when a Special Project to apply a species modification template has completed.
# Note that this will trigger once for each combination of planet & original species.
#
# This = Country
# From = Species ( Post Modification )
on_modification_complete = {
	events = {
		hfe_population.51
	}
}

# Triggers event when a system is entered by ships from a country (not pirate or monsters) for the first time
# Scope = Ship
# From = System
# FromFrom = Country
on_entering_system_first_time = {
	events = {
		# ahet home
		hfe.410
		# copernicus
		hfe.355
		# drones and pirate survey
		hfe_maintenance.3
	}
	random_events = {
		# vanilla have 200 for nothing
		# varelse fleet event
		2 = hfe.51
		# thoth start, spawn system
		2 = hfe.699
	}
}

# Triggers event when ship enters a system.
# Scope = Ship
# From = System
# FromFrom = Country
on_entering_system = {
	events = {
		# random story events
		hfe_discovery.500
		# add comms with enclaves
		# hfe_discovery.56
	}
}

# Triggered when two empires discover each other
# This = Empire 1
# From = Empire 2
# Fromfromfrom = System where contact occurred
on_first_contact = {
	events = {
		# contact with egypt
		hfe.46
		# contact with future
		hfe.5000
		# contact with drone
		hfe.604
		# abort find sol chain
		hfe.351
		# abort find future chain
		hfe.5071
	}
}

#use for custom country types that need first contact paths
# this = first_contact
on_first_contact_stage_1_no_path = {
	events = {
		hfe.698
	}
}

# Triggers when trying to open the diplomacy view for countries with custom diplomacy.
# Country scope
# This = target country (player)
# From = source country
on_custom_diplomacy = {
	events = {
		# pirate
		hfe_pirate.100
		# thoth
		# hfe.713		# Fall back if Thoth does not load, also to AI and those who didn't discover him
		hfe.710		# Player talks with Thoth
	}
}

# A ship has surveyed a planet.
# Scope = Ship
# From = Planet
on_survey_planet = {
	events = {
		hfe.100
		# ahet colony
		hfe.400
		hfe.401
		# ahet home
		hfe.411
		# copernicus
		hfe.356
		hfe.357
		hfe.358
		# spiral_of_death colony
		hfe_features_spiral_of_death.12
	}
}

# Triggers event when ship enters a system
# Scope = Ship
# From = System
# FromFrom = Country
# on_entering_system = {
#	# events = {
#	# }
# }
# A fleet has entered a system
# Scope = Fleet
# From = System
on_entering_system_fleet = {
	events = {
		# find sol event chain
		hfe.350
		# check enemy in system
		hfe_discovery.103
		# change outpost owner for pirates
		hfe_pirate.62
		# pirate fleet logic
		hfe_pirate.302
		hfe_pirate.303
		# thoth relocation check
		hfe.727
	}
}

# This = owner of ship 1 (combatant)
# From = owner of ship 2 (destroyed)
# FromFrom = ship 1
# FromFromFrom = ship 2
on_ship_destroyed_perp = {
	events = {
		# discovery gain resurces
		hfe_discovery.100
		# pirate gain resurces
		hfe_pirate.52
		# kill check for contracts
		hfe_discovery.101
		hfe_discovery.102
		# aggressive diplomacy civic
		hfe_features.7
		# for hfe_chain_pirate_count counters
		hfe_pirate.60
	}
}

# This = owner of ship 1 (destroyed)
# From = owner of ship 2 (combatant)
# FromFrom = ship 1
# FromFromFrom = ship 2
on_ship_destroyed_victim = {
	events = {
		# discovery killed end game
		hfe_discovery.51
		# kill country then station killed
		hfe.726
		# pirate lost starbase
		hfe_pirate.54
		# If the Exodus ship is killed, game over
		hfe_features.16
	}
}

# This = owner of fleet 1 (destroyed)
# From = owner of fleet 2 (combatant)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
on_fleet_destroyed_victim = {
	events = {
		hfe_maintenance.4
	}
}

# This = owner of fleet 1 (combatant)
# From = owner of fleet 2 (destroyed)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
# on_fleet_destroyed_perp = {
# 	events = {
# 	}
# }
# A ship has been built
# Root = Ship
# From = Planet
on_ship_built = {
	events = {
		# pirate logic
		hfe_pirate.4
	}
}

#From = Planet scope
#This = Fleet scope
on_fleet_enter_orbit = {
	events = {
		# docking event
		hfe_discovery.150
	}
}

#This = destroyed country
#From = optional, destroyer (country)
on_country_destroyed = {
	events = {
		hfe_pirate.58
		# hfe_test.19
		hfe_leaders.110
	}
}

# A ship has started a new order
# Root = Ship
# From = Country
on_ship_order = {
	events = {
		# pirate fleet logic
		#hfe_pirate.305
	}
}

# This = Ship
# From = Disabler Ship
on_ship_disabled = {
	events = {
		# kill starbases of drone
		hfe_maintenance.0
		# pirate starbase event
		hfe_pirate.56
		# annex occupying systems starbase on total war
		hfe_total_war.52
	}
}

# A fleet has successfully escaped from combat, executed right before the fleet enters FTL
# This = escaping fleet
# From = system escaped from
# FromFrom = system escaping to
on_emergency_ftl = {
	events = {
		# pirate fleet logic
		hfe_pirate.306
	}
}

#A building construction has been completed.
# From = Army
# this = Planet
# on_army_recruited = {
# 	events = {
# 	}
# }
# A building construction has been completed.
# This = Planet
on_building_complete = {
	events = {
		# Planet Shield
		hfe_population.114
	}
}

# A building construction has been completed, which is an upgrade of previous building.
# This = Planet
on_building_upgraded = {
	events = {
		# planet shield
		hfe_population.114
	}
}

# A building construction has demolished.
# This = Planet
on_building_demolished = {
	events = {
		# building_assimilator feature
		# hfe_maintenance.13
		# planet shield
		hfe_population.114
	}
}

# A building construction has finished, replacing another building.
# This = Planet
on_building_replaced = {
	events = {
		# building_assimilator feature
		# hfe_maintenance.13
		# planet shield
		hfe_population.114
	}
}

# A war is beginning, executed for every country in the war.
# Root = Country
# From = War
on_war_beginning = {
	events = {
		# invite every subjects to war
		hfe_total_war.0
		# start war in heavens
		hfe_total_war.1011
		# warcrime tourism
		hfe_leaders.109
	}
}

# A war has ended
# Root = Loser
# From = Main Winner
on_war_ended = {
	events = {
		# warcrime tourism
		hfe_leaders.109
	}
}

# This = country
# From = opponent war leader
on_entering_war = {
	events = {
		# aggressive diplomacy civic
		hfe_features.9
	}
}

# A war has been won
# Root = Winner Warleader
# From = Loser Warleader
# FromFrom = War
on_war_won = {
	events = {
		hfe_discovery.53
	}
}

# A war has been lost
# Root = Loser Warleader
# From = Winner Warleader
# FromFrom = War
on_war_lost = {
	events = {
		hfe_discovery.53
	}
}

# A pop has finished growing
# This = Planet scope
# From = Country
# FromFrom = Pop
on_pop_grown = {
	events = {
		# brainworm assimilation
		hfe_brainworm.2
	}
}

# A pop has finished assembling
# This = Planet scope
# From = Country
# FromFrom = Pop
on_pop_assembled = {
	events = {
		# fix robot pop
		hfe_population.3
	}
}

# A pop has finished purging
# This = Planet scope
# From = Country
# FromFrom = Pop
on_pop_purged = {
	events = {
		# add purged pop to stats
		hfe_plague.7
		# find new pop for extractor after purge complited
		hfe_maintenance.11
	}
}

# A ship has been upgraded
#  Root = Ship
on_ship_upgraded = {
	events = {
		hfe_test.21
	}
}

# A planet has begun the colonization process.
# Scope = Planet
on_colonization_started = {
	events = {
		# spiral_of_death first colony
		hfe_features_spiral_of_death.13
	}
}

# A planet has been colonized.
# Scope = Planet
on_colonized = {
	events = {
		# biobomb
		hfe_features.1
		# Exodus
		# hfe_features.17
	}
}

# This = owner of fleet 1
# From = owner of fleet 2
# FromFrom = fleet 1
# FromFromFrom = fleet 2
on_entering_battle = {
	events = {
		# thoth relocation check
		hfe.728
	}
}

# This = owner of fleet 1 (winner)
# From = owner of fleet 2 (loser)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
on_space_battle_won = {
	events = {
		# add afraid demons trait
		hfe_leaders.105
		# pirate fleet logic
		hfe_pirate.305
		# admiral satanist can kill retreating admiral
		hfe_leaders.107
		# blight assimilate fleet
		hfe.5089
	}
}

# This = owner of fleet 1 (loser)
# From = owner of fleet 2 (winner)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
on_space_battle_lost = {
	events = {
		hfe_pirate.307
	}
}

# This = construction ship
# From = planet it is built on
# Fires when construction is complete,
# immediately before station is created
on_building_research_station = {
	events = {
		hfe.5061
	}
}

on_building_starbase_outpost = {
	events = {
		hfe_maintenance.1
	}
}

# From = Tile
# This = Planet
# on_blocker_cleared = {
# 	events = {
# 		# hfe_test.37
# 	}
# }
# Triggers country_event for the attacker upon victory
# (Before controller is switched)
# This = country, leader attacker
# From = country, planet owner
# FromFrom = planet
# IDENTITIES: attacker is the side that "IsHostile" to
# the planet controller; e.g. spawned monster armies
# are attackers, but if they win and the player attempts
# to retake the planet, the player is the attacker
on_planet_attackers_win = {
	events = {
		# teachable lvl up
		hfe_leaders.102
		# zombie take planet
		hfe_plague.5
		# retake zombie planet
		hfe_plague.6
	}
}

# Triggers country_event for the defender upon victory
# This = country, planet owner
# From = country, attack leader
# FromFrom = planet
on_planet_defenders_win = {
	events = {
		# teachable lvl up
		hfe_leaders.102
		# primitive lvl up if win invasion
		hfe_primitive.202
	}
}

# Planet has taken damage from orbital bombardment - Damage is applied daily
# This = Planet
# From = Bombarder
on_planet_bombarded = {
	events = {
		# pirate bombard planet
		hfe_pirate.53
		# convert pirate planet to asteroid
		hfe_pirate.57
		# plague bombardment
		hfe_plague.161
		# clear zombie planet
		hfe_plague.8
	}
}

#From = Country scope
#This = Planet scope
on_planet_ownerless = {
	events = {
		# convert pirate planet to asteroid
		hfe_pirate.57
		# reduce the counter and send notification
		hfe_plague.11
	}
}

#Fired whenever a new owner is set for a planet,
#be it after a war or through a trade
#From = Country scope (new owner)
#This = Planet scope
on_planet_transfer = {
	events = {
		# copernicus
		hfe.363
		# aggressive diplomacy civic
		hfe_features.8
		# convert pirate planet to asteroid
		hfe_pirate.57
		# Ra'ar story
		hfe.500
		# instant assimilation
		hfe.5084
		# fix robot pop
		hfe_population.0
		# exodus settle
		hfe_features.3
		# hfe_civic_features_power_in_low_numbers effect
		hfe_features.21
		# human 2 extended clean then non human gets planet
		hfe_features.24
	}
}

# A planets controller becomes a country not the same as the owner.
# Root = Planet
# From = Planet Owner
# FromFrom = Planet Controller (the one occupying)
on_planet_occupied = {
	events = {
		# annex occupying systems
		hfe_total_war.51
	}
}

# Pop is abducted by raiding stance
# This = Pop scope
# From = planet abducted from
on_pop_abducted = {
	events = {
		# fix robot pop
		hfe_population.1
	}
}

# Planet has been terraformed
# This = Planet
# From = Terraforming country
on_terraforming_complete = {
	events = {
		# terraforming ruler reward
		hfe_leaders.100
		# remove plague bombarding modifier
		hfe_plague.153
	}
}

# This = subject
# From = subject's overlord
# on_becoming_subject = {
# 	events = {
# 		# change subject type for egypt/future
# 		hfe_maintenance.50
# 	}
# }
# X years has passed since a planet was colonized (won't trigger on empire homeworld)
on_colony_1_year_old = {
	random_events = {
		5 = hfe.150
		5 = hfe.200
		5 = hfe.250
		5 = hfe.300
	}
}

on_colony_2_years_old = {
	random_events = {
		5 = hfe.150
		5 = hfe.200
		5 = hfe.250
		5 = hfe.300
	}
}

on_colony_3_years_old = {
	random_events = {
		5 = hfe.150
		5 = hfe.200
		5 = hfe.250
		5 = hfe.300
	}
}

on_colony_4_years_old = {
	random_events = {
		5 = hfe.150
		5 = hfe.200
		5 = hfe.250
		5 = hfe.300
	}
}

on_colony_5_years_old = {
	random_events = {
		5 = hfe.150
		5 = hfe.200
		5 = hfe.250
		5 = hfe.300
	}
}

on_colony_6_years_old = {
	random_events = {
		20 = 0
		1 = hfe.150
		1 = hfe.200
		1 = hfe.250
		1 = hfe.300
	}
}

on_colony_7_years_old = {
	random_events = {
		20 = 0
		1 = hfe.150
		1 = hfe.200
		1 = hfe.250
		1 = hfe.300
	}
}

on_colony_8_years_old = {
	random_events = {
		20 = 0
		1 = hfe.150
		1 = hfe.200
		1 = hfe.250
		1 = hfe.300
	}
}

on_colony_9_years_old = {
	random_events = {
		20 = 0
		1 = hfe.150
		1 = hfe.200
		1 = hfe.250
		1 = hfe.300
	}
}

on_colony_10_years_old = {
	random_events = {
		20 = 0
		1 = hfe.150
		1 = hfe.200
		1 = hfe.250
		1 = hfe.300
	}
}
