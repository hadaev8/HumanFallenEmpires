hfe_effect_population_fix_robot_pop = {
	# robot to robot
	if = {
		limit = {
			has_trait = trait_mechanical
			exists = owner
			owner = {
				is_machine_empire = no
			}
		}
		if = {
			limit = {
				not = {
					exists = event_target:hfe_robot_species
				}
			}
			owner = {
				random_owned_species = {
					limit = {
						has_trait = trait_mechanical
						not = {
							is_same_species = prevprev
						}
					}
					weights = {
						base = 1
						modifier = {
							factor = 1000
							is_same_species = prev
						}
					}
					save_event_target_as = hfe_robot_species
				}
			}
		}
		if = {
			limit = {
				exists = event_target:hfe_robot_species
			}
			modify_species = {
				base = event_target:hfe_robot_species
			}
		}
	}
	# machine to machine
	else_if = {
		limit = {
			has_trait = trait_machine_unit
			exists = owner
			owner = {
				is_machine_empire = yes
			}
		}
		if = {
			limit = {
				not = {
					exists = event_target:hfe_robot_species
				}
			}
			owner = {
				random_owned_species = {
					limit = {
						has_trait = trait_machine_unit
					}
					weights = {
						base = 1
						modifier = {
							factor = 1000
							is_same_species = prev
						}
					}
					save_event_target_as = hfe_robot_species
				}
			}
		}
		if = {
			limit = {
				exists = event_target:hfe_robot_species
			}
			modify_species = {
				base = event_target:hfe_robot_species
			}
		}
		remove_modifier = pop_recently_conquered
	}
	# machine to robot
	else_if = {
		limit = {
			has_trait = trait_machine_unit
			exists = owner
			owner = {
				is_machine_empire = no
			}
		}
		if = {
			limit = {
				not = {
					exists = event_target:hfe_robot_species
				}
			}
			owner = {
				random_owned_species = {
					limit = {
						has_trait = trait_mechanical
					}
					weights = {
						base = 1
						modifier = {
							factor = 1000
							is_same_species = prev
						}
					}
					save_event_target_as = hfe_robot_species
				}
			}
		}
		if = {
			limit = {
				exists = event_target:hfe_robot_species
			}
			modify_species = {
				base = event_target:hfe_robot_species
				remove_trait = trait_machine_unit
				add_trait = trait_mechanical
			}
		}
		else = {
			modify_species = {
				remove_trait = trait_machine_unit
				add_trait = trait_mechanical
			}
		}
		remove_modifier = pop_recently_conquered
	}
	# robot to machine
	else_if = {
		limit = {
			has_trait = trait_mechanical
			exists = owner
			owner = {
				is_machine_empire = yes
			}
		}
		if = {
			limit = {
				not = {
					exists = event_target:hfe_robot_species
				}
			}
			owner = {
				random_owned_species = {
					limit = {
						has_trait = trait_machine_unit
					}
					weights = {
						base = 1
						modifier = {
							factor = 1000
							is_same_species = prev
						}
					}
					save_event_target_as = hfe_robot_species
				}
			}
		}
		if = {
			limit = {
				exists = event_target:hfe_robot_species
			}
			modify_species = {
				base = event_target:hfe_robot_species
				remove_trait = trait_mechanical
				add_trait = trait_machine_unit
			}
		}
		else = {
			modify_species = {
				remove_trait = trait_mechanical
				add_trait = trait_machine_unit
			}
		}
		remove_modifier = pop_recently_conquered
	}
}

# switch to hive
hfe_effect_gov_fix_to_hive = {
	# TODO still need this?
	if = {
		limit = {
			host_has_dlc = "Synthetic Dawn Story Pack"
			hfe_trigger_non_sapient_robot = yes
			is_machine_empire = no
		}
		create_country = {
			type = default
			species = this.species
			ignore_initial_colony_error = yes
			ethos = {
				ethic = ethic_gestalt_consciousness
			}
			authority = auth_machine_intelligence
			origin = origin_default
		}
		copy_ethos_and_authority = last_created_country
		random_list = {
			10 = {
				modifier = {
					factor = 0.1
					not = {
						any_owned_species = {
							hfe_trigger_is_robot = no
						}
					}
				}
				change_government = {
					civics = {
						civic = civic_machine_servitor
						civic = random
					}
				}
			}
			10 = {
				modifier = {
					factor = 0.1
					not = {
						any_owned_species = {
							hfe_trigger_is_robot = no
						}
					}
				}
				change_government = {
					civics = {
						civic = civic_machine_assimilator
						civic = random
					}
				}
			}
			10 = {
				modifier = {
					factor = 0.1
					any_owned_species = {
						hfe_trigger_is_robot = no
					}
				}
				change_government = {
					civics = {
						civic = civic_machine_terminator
						civic = random
					}
				}
			}
			10 = {
				modifier = {
					factor = 0.1
					any_owned_species = {
						hfe_trigger_is_robot = no
					}
				}
				change_government = {
					civics = random
				}
			}
		}
		kill_leader = {
			ruler = yes
			show_notification = no
		}
		# remove robot trait
		if = {
			limit = {
				has_trait = trait_mechanical
			}
			modify_species = {
				remove_trait = trait_mechanical
				add_trait = trait_machine_unit
			}
		}
		set_name = random
	}
	else_if = {
		limit = {
			host_has_dlc = "Utopia"
			has_trait = trait_hive_mind
			is_hive_empire = no
		}
		create_country = {
			type = default
			species = this.species
			ignore_initial_colony_error = yes
			ethos = {
				ethic = ethic_gestalt_consciousness
			}
			authority = auth_hive_mind
			origin = origin_default
		}
		copy_ethos_and_authority = last_created_country
		random_list = {
			9 = {
				change_government = {
					civics = random
				}
			}
			1 = {
				change_government = {
					civics = {
						civic = civic_hive_devouring_swarm
						civic = random
					}
				}
			}
		}
		kill_leader = {
			ruler = yes
			show_notification = no
		}
		set_name = random
	}
}

# from hive
hfe_effect_gov_fix_from_hive = {
	if = {
		limit = {
			is_gestalt = yes
			hfe_trigger_non_sapient = no
			# in general its ok if cybernetics will be released from hive authority but not blight
			not = {
				has_origin = hfe_origin_blight
			}
		}
		create_country = {
			type = default
			species = this.species
			ignore_initial_colony_error = yes
			origin = origin_default
		}
		copy_ethos_and_authority = last_created_country
		change_government = {
			civics = random
		}
		set_name = random
	}
}

# just reset
hfe_effect_gov_reset = {
	create_country = {
		type = default
		species = this
		ignore_initial_colony_error = yes
		origin = origin_default
	}
	copy_ethos_and_authority = last_created_country
	change_government = {
		civics = random
	}
	set_name = random
}

hfe_effect_population_remove_object_shield_global = {
	every_ambient_object = {
		limit = {
			or = {
				is_ambient_object_type = hfe_object_population_shield
				is_ambient_object_type = hfe_object_population_shield_ringworld
			}
		}
		destroy_ambient_object = this
	}
}
