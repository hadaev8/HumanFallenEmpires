#
# for country
hfe_effect_primitive_down = {
	switch = {
		trigger = has_pre_ftl_age
		stone_age = {
		}
		bronze_age = {
			set_pre_ftl_age_effect = {
				PRE_FTL_AGE = stone_age
			}
		}
		iron_age = {
			set_pre_ftl_age_effect = {
				PRE_FTL_AGE = bronze_age
			}
		}
		late_medieval_age = {
			set_pre_ftl_age_effect = {
				PRE_FTL_AGE = iron_age
			}
		}
		renaissance_age = {
			set_pre_ftl_age_effect = {
				PRE_FTL_AGE = late_medieval_age
			}
		}
		steam_age = {
			set_pre_ftl_age_effect = {
				PRE_FTL_AGE = renaissance_age
			}
		}
		industrial_age = {
			set_pre_ftl_age_effect = {
				PRE_FTL_AGE = steam_age
			}
		}
		machine_age = {
			set_pre_ftl_age_effect = {
				PRE_FTL_AGE = industrial_age
			}
		}
		atomic_age = {
			set_pre_ftl_age_effect = {
				PRE_FTL_AGE = machine_age
			}
		}
		early_space_age = {
			set_pre_ftl_age_effect = {
				PRE_FTL_AGE = atomic_age
			}
		}
	}
	hfe_effect_primitive_down_civics = yes
	# this flag seems doesnt used by vanilla, but removing it just in case
	remove_country_flag = recently_advanced
	hfe_effect_primitive_reduce_pops = yes
}

# for country
hfe_effect_primitive_up = {
	# lets vanilla do the thing
	advance_pre_ftl_tech = yes
	# do if still primitive
	if = {
		limit = {
			is_country_type = primitive
		}
		hfe_effect_primitive_up_civics = yes
	}
}

# for country
hfe_effect_primitive_down_civics = {
	force_remove_civic = hfe_civic_primitive_new_tech
	force_remove_civic = hfe_civic_primitive_unstable_society
	force_add_civic = hfe_civic_primitive_degraded_tech
	force_add_civic = hfe_civic_primitive_degraded_society
}

# for country
hfe_effect_primitive_up_civics = {
	force_remove_civic = hfe_civic_primitive_degraded_tech
	force_remove_civic = hfe_civic_primitive_degraded_society
	force_add_civic = hfe_civic_primitive_new_tech
	force_add_civic = hfe_civic_primitive_unstable_society
}

# for country
hfe_effect_primitive_was_fallen_civics = {
	force_add_civic = hfe_civic_primitive_was_fallen
}

# for country
hfe_effect_primitive_was_default_civics = {
	force_add_civic = hfe_civic_primitive_was_default
}

# for country
hfe_effect_primitive_remove_mod_civics = {
	force_remove_civic = hfe_civic_primitive_degraded_tech
	force_remove_civic = hfe_civic_primitive_degraded_society
	force_remove_civic = hfe_civic_primitive_new_tech
	force_remove_civic = hfe_civic_primitive_unstable_society
	force_remove_civic = hfe_civic_primitive_was_fallen
	force_remove_civic = hfe_civic_primitive_was_default
}

# for planet
hfe_effect_primitive_make_planet_primitive = {
	random_owned_pop = {
		limit = {
			is_sapient = yes
		}
		# weights = {
		# 	base = 1
		# 	modifier = {
		# 		add = 1000
		# 		hfe_trigger_is_robot_or_hive = no
		# 	}
		# }
		species = {
			save_event_target_as = hfe_new_country_species
		}
	}
	owner = {
		save_event_target_as = hfe_primitive_owner
	}
	select_pre_ftl_origin = yes
	create_country = {
		species = event_target:hfe_new_country_species
		type = primitive
		origin = origin_default
		effect = {
			prev = {
				set_owner = prev
			}
			hfe_effect_primitive_set_random_age = yes
			if = {
				limit = {
					event_target:hfe_primitive_owner = {
						hfe_trigger_is_fallen = yes
					}
				}
				hfe_effect_primitive_was_fallen_civics = yes
			}
			else = {
				hfe_effect_primitive_was_default_civics = yes
			}
			# every_country = {
			# 	establish_communications_no_message = prev
			# }
		}
	}
	hfe_effect_primitive_reduce_pops = yes
}

# for country
hfe_effect_primitive_set_random_age = {
	random_list = {
		1 = {
			set_pre_ftl_age_effect = {
				PRE_FTL_AGE = stone_age
			}
		}
		1 = {
			set_pre_ftl_age_effect = {
				PRE_FTL_AGE = bronze_age
			}
		}
		1 = {
			set_pre_ftl_age_effect = {
				PRE_FTL_AGE = iron_age
			}
		}
		1 = {
			set_pre_ftl_age_effect = {
				PRE_FTL_AGE = late_medieval_age
			}
		}
		1 = {
			set_pre_ftl_age_effect = {
				PRE_FTL_AGE = renaissance_age
			}
		}
		1 = {
			set_pre_ftl_age_effect = {
				PRE_FTL_AGE = steam_age
			}
		}
		1 = {
			set_pre_ftl_age_effect = {
				PRE_FTL_AGE = industrial_age
			}
		}
		1 = {
			set_pre_ftl_age_effect = {
				PRE_FTL_AGE = machine_age
			}
		}
		1 = {
			set_pre_ftl_age_effect = {
				PRE_FTL_AGE = atomic_age
			}
		}
		1 = {
			set_pre_ftl_age_effect = {
				PRE_FTL_AGE = early_space_age
			}
		}
	}
}

# copy past from vanilla setup_pre_ftl_planet, but only for pops
# for planet
hfe_effect_primitive_init_pops = {
	owner = {
		switch = {
			trigger = has_pre_ftl_age
			stone_age = {
				prev = {
					while = {
						count = @stone_age_pops
						create_pop = {
							species = owner.species
						}
					}
				}
			}
			bronze_age = {
				prev = {
					while = {
						count = @bronze_age_pops
						create_pop = {
							species = owner.species
						}
					}
				}
			}
			iron_age = {
				prev = {
					while = {
						count = @iron_age_pops
						create_pop = {
							species = owner.species
						}
					}
				}
			}
			late_medieval_age = {
				prev = {
					while = {
						count = @late_medieval_age_pops
						create_pop = {
							species = owner.species
						}
					}
				}
			}
			renaissance_age = {
				prev = {
					while = {
						count = @renaissance_age_pops
						create_pop = {
							species = owner.species
						}
					}
				}
			}
			steam_age = {
				prev = {
					while = {
						count = @steam_age_pops
						create_pop = {
							species = owner.species
						}
					}
				}
			}
			industrial_age = {
				prev = {
					while = {
						count = @industrial_age_pops
						create_pop = {
							species = owner.species
						}
					}
				}
				if = {
					limit = {
						has_origin = origin_mechanists
					}
					create_built_robot_species = yes
					owner.species = {
						save_global_event_target_as = pre_ftl_mechanist_robot
					}
					set_country_flag = created_robots
					prev = {
						while = {
							count = 2
							random_owned_pop = {
								limit = {
									is_robotic_species = no
								}
								kill_pop = yes
							}
							create_pop = {
								species = event_target:pre_ftl_mechanist_robot
							}
						}
					}
				}
			}
			machine_age = {
				prev = {
					while = {
						count = @machine_age_pops
						create_pop = {
							species = owner.species
						}
					}
				}
				if = {
					limit = {
						has_origin = origin_mechanists
					}
					create_built_robot_species = yes
					owner.species = {
						save_global_event_target_as = pre_ftl_mechanist_robot
					}
					set_country_flag = created_robots
					prev = {
						while = {
							count = 4
							random_owned_pop = {
								limit = {
									is_robotic_species = no
								}
								kill_pop = yes
							}
							create_pop = {
								species = event_target:pre_ftl_mechanist_robot
							}
						}
					}
				}
			}
			atomic_age = {
				prev = {
					while = {
						count = @atomic_age_pops
						create_pop = {
							species = owner.species
						}
					}
				}
				if = {
					limit = {
						has_origin = origin_mechanists
					}
					create_built_robot_species = yes
					owner.species = {
						save_global_event_target_as = pre_ftl_mechanist_robot
					}
					set_country_flag = created_robots
					prev = {
						while = {
							count = 6
							random_owned_pop = {
								limit = {
									is_robotic_species = no
								}
								kill_pop = yes
							}
							create_pop = {
								species = event_target:pre_ftl_mechanist_robot
							}
						}
					}
				}
			}
			early_space_age = {
				prev = {
					while = {
						count = @early_space_age_pops
						create_pop = {
							species = owner.species
						}
					}
				}
				if = {
					limit = {
						has_origin = origin_mechanists
					}
					create_built_robot_species = yes
					owner.species = {
						save_global_event_target_as = pre_ftl_mechanist_robot
					}
					set_country_flag = created_robots
					prev = {
						while = {
							count = 8
							random_owned_pop = {
								limit = {
									is_robotic_species = no
								}
								kill_pop = yes
							}
							create_pop = {
								species = event_target:pre_ftl_mechanist_robot
							}
						}
					}
				}
			}
		}
	}
}

# for planet
hfe_effect_primitive_reduce_pops = {
	owner = {
		switch = {
			trigger = has_pre_ftl_age
			stone_age = {
				prev = {
					while = {
						limit = {
							num_pops > @stone_age_pops
						}
						random_owned_pop = {
							kill_pop = yes
						}
					}
				}
			}
			bronze_age = {
				prev = {
					while = {
						limit = {
							num_pops > @bronze_age_pops
						}
						random_owned_pop = {
							kill_pop = yes
						}
					}
				}
			}
			iron_age = {
				prev = {
					while = {
						limit = {
							num_pops > @iron_age_pops
						}
						random_owned_pop = {
							kill_pop = yes
						}
					}
				}
			}
			late_medieval_age = {
				prev = {
					while = {
						limit = {
							num_pops > @late_medieval_age_pops
						}
						random_owned_pop = {
							kill_pop = yes
						}
					}
				}
			}
			renaissance_age = {
				prev = {
					while = {
						limit = {
							num_pops > @renaissance_age_pops
						}
						random_owned_pop = {
							kill_pop = yes
						}
					}
				}
			}
			steam_age = {
				prev = {
					while = {
						limit = {
							num_pops > @steam_age_pops
						}
						random_owned_pop = {
							kill_pop = yes
						}
					}
				}
			}
			industrial_age = {
				prev = {
					while = {
						limit = {
							num_pops > @industrial_age_pops
						}
						random_owned_pop = {
							kill_pop = yes
						}
					}
				}
			}
			machine_age = {
				prev = {
					while = {
						limit = {
							num_pops > @machine_age_pops
						}
						random_owned_pop = {
							kill_pop = yes
						}
					}
				}
			}
			atomic_age = {
				prev = {
					while = {
						limit = {
							num_pops > @atomic_age_pops
						}
						random_owned_pop = {
							kill_pop = yes
						}
					}
				}
			}
			early_space_age = {
				prev = {
					while = {
						limit = {
							num_pops > @early_space_age_pops
						}
						random_owned_pop = {
							kill_pop = yes
						}
					}
				}
			}
		}
	}
}
